com.taobao.arthas.core.view.ObjectView.appendStringBuilder(StringBuilder,String)
com.taobao.arthas.core.view.ObjectView.renderObject(Object,int,int,StringBuilder)
com.taobao.arthas.core.util.TokenUtils.findSecondTokenText(List<CliToken>)
com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)
com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)
com.lmax.disruptor.MultiProducerSequencer.setAvailable(long)
com.lmax.disruptor.dsl.Disruptor.hasBacklog()
com.lmax.disruptor.RingBuffer.getCursor()
com.lmax.disruptor.dsl.EventProcessorInfo.getSequences()
com.lmax.disruptor.FixedSequenceGroup.get()
com.lmax.disruptor.dsl.ConsumerRepository.add(EventProcessor,EventHandler<?superT>,SequenceBarrier)
com.lmax.disruptor.BlockingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)
com.lmax.disruptor.Sequence.compareAndSet(long,long)
com.lmax.disruptor.RingBuffer.get(long)
com.lmax.disruptor.MultiProducerSequencer.next(int)
com.alibaba.druid.wall.spi.OracleWallProvider.createParser(String)
com.alibaba.druid.wall.spi.MySqlWallVisitor.preVisit(SQLObject)
com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(ConnectionProxy,String)
com.alibaba.druid.wall.WallConfig.configFromProperties(Properties)
com.alibaba.druid.wall.WallFilter.init(DataSourceProxy)
com.alibaba.druid.wall.spi.SQLServerWallProvider.createWallVisitor()
com.alibaba.druid.stat.JdbcStatManager.getSqlList()
com.alibaba.druid.mock.MockDriver.createMockConnection(MockDriver,String,Properties)
com.alibaba.druid.wall.spi.SQLServerWallProvider.createParser(String)
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerStatementParser.createSQLSelectParser()
com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeQuery(PreparedStatementProxy)
com.alibaba.druid.pool.DruidDataSource.createAndStartCreatorThread()
com.alibaba.druid.pool.DruidConnectionHolder.reset()
com.alibaba.druid.wall.WallProvider.addWhiteSql(String,Map<String,WallSqlTableStat>,Map<String,WallSqlFunctionStat>,boolean)
com.alibaba.druid.wall.WallProvider.getTableStatWithLowerName(String)
com.alibaba.druid.pool.DruidPooledPreparedStatement.executeQuery()
com.alibaba.druid.wall.WallUtils.isValidateMySql(String,WallConfig)
com.alibaba.druid.wall.WallProvider.checkInternal(String)
com.alibaba.druid.sql.ast.SQLObjectImpl.accept(SQLASTVisitor)
com.alibaba.druid.wall.spi.MySqlWallVisitor.toSQL(SQLObject)
com.alibaba.druid.mock.MockDriver.createMockPreparedStatement(MockConnection,String)
com.alibaba.druid.wall.spi.WallVisitorUtils.getValue(WallVisitor,SQLExpr)
com.alibaba.druid.mock.MockDriver.createMockStatement(MockConnection)
com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(Map)
com.alibaba.druid.pool.DruidDataSource.put(PhysicalConnectionInfo)
com.alibaba.druid.pool.DruidConnectionHolder.getStatementPool()
com.alibaba.druid.wall.WallProvider.addBlackSql(String,Map<String,WallSqlTableStat>,Map<String,WallSqlFunctionStat>,List<Violation>,boolean)
com.alibaba.druid.wall.spi.MySqlWallProvider.createExportParameterVisitor()
com.alibaba.druid.filter.FilterChainImpl.nextFilter()
com.alibaba.druid.wall.WallProvider.checkValid(String)
com.alibaba.druid.wall.WallUtils.isValidateOracle(String,WallConfig)
com.alibaba.druid.mock.MockDriver.registerDriver(Driver)
com.alibaba.druid.pool.DruidDataSource.createAndStartDestroyThread()
com.alibaba.druid.proxy.DruidDriver.registerDriver(Driver)
com.alibaba.druid.sql.SQLUtils.translateOracleToMySql(String)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visitorBinaryRight(SQLBinaryOpExpr)
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr.accept0(SQLASTVisitor)
com.alibaba.druid.pool.DruidPooledConnection.createStatement()
com.alibaba.druid.sql.ast.SQLDataTypeImpl.toString()
com.alibaba.druid.wall.spi.OracleWallProvider.createExportParameterVisitor()
com.alibaba.druid.wall.spi.PGWallProvider.createParser(String)
com.alibaba.druid.wall.spi.WallVisitorUtils.loadResource(Set<String>,String)
com.alibaba.druid.wall.WallUtils.isValidateOracle(String)
com.alibaba.druid.pool.DruidDataSource.takeLast()
com.alibaba.druid.sql.parser.Lexer.token()
com.alibaba.druid.wall.WallUtils.isValidateSqlServer(String)
com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr.accept0(SQLASTVisitor)
com.alibaba.druid.pool.DruidPooledConnection.close()
com.alibaba.druid.wall.WallContext.getTableStat(String)
com.alibaba.druid.sql.parser.SQLExprParser.parseLimit()
com.alibaba.druid.sql.SQLUtils.format(String,String,List<Object>,FormatOption)
com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(long)
com.alibaba.druid.wall.spi.WallVisitorUtils.getValue_and(WallVisitor,List<SQLExpr>)
com.alibaba.druid.stat.DruidDataSourceStatManager.getDataSourceList()
com.alibaba.druid.wall.spi.OracleWallVisitor.preVisit(SQLObject)
com.alibaba.druid.filter.stat.StatFilter.getConnectionInfo(ConnectionProxy)
com.alibaba.druid.pool.DruidPooledConnection.recycle()
com.alibaba.druid.stat.JdbcSqlStat.getCompositeType()
com.alibaba.druid.sql.dialect.mysql.parser.MySqlLexer.scanString()
com.alibaba.druid.sql.PagerUtils.limitSQLServer(SQLSelect,String,int,int,boolean)
com.alibaba.druid.stat.DruidDataSourceStatManager.clear()
com.alibaba.druid.pool.DruidAbstractDataSource.getProxyFilters()
com.alibaba.druid.sql.dialect.mysql.parser.MySqlLexer.scanNumber()
com.alibaba.druid.sql.ast.statement.SQLSelectStatement.accept0(SQLASTVisitor)
com.alibaba.druid.support.json.JSONWriter.write(char)
com.alibaba.druid.wall.spi.OracleWallVisitor.toSQL(SQLObject)
com.alibaba.druid.wall.spi.WallVisitorUtils.isInTableSource(SQLObject)
com.alibaba.druid.sql.parser.SQLExprParser.bitXor()
com.alibaba.druid.sql.PagerUtils.hasUnorderedLimit(String,String)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLMethodInvokeExpr)
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.preVisit(SQLObject)
com.alibaba.druid.wall.spi.MySqlWallVisitor.getViolations()
com.alibaba.druid.wall.WallProvider.getBlackSql(String)
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerExprParser.parseSelectItem()
com.alibaba.druid.pool.DruidDataSource.registerMbean()
com.alibaba.druid.sql.parser.SQLStatementParser.parseValueClause(List<SQLInsertStatement.ValuesClause>,int,SQLObject)
com.alibaba.druid.wall.spi.WallVisitorUtils.check(WallVisitor,SQLExprTableSource)
com.alibaba.druid.filter.FilterChainImpl.getFilters()
com.alibaba.druid.sql.parser.SQLParserUtils.createSQLStatementParser(String,String)
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlEvalVisitorImpl.visit(SQLBinaryOpExpr)
com.alibaba.druid.pool.DruidDataSourceStatLoggerImpl.configFromProperties(Properties)
com.alibaba.druid.wall.spi.WallVisitorUtils.form(String)
com.alibaba.druid.util.FnvHash.hashCode64(String)
com.alibaba.druid.pool.DruidAbstractDataSource.initStatement(DruidPooledConnection,Statement)
com.alibaba.druid.sql.parser.Lexer.nextTokenComma()
com.alibaba.druid.support.http.WebStatFilter.init(FilterConfig)
com.alibaba.druid.sql.parser.SQLStatementParser.parseSelect()
com.alibaba.druid.pool.DruidPooledConnection.afterExecute()
com.alibaba.druid.wall.spi.WallVisitorUtils.checkSelectForMultiTenant(WallVisitor,SQLSelectQueryBlock)
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseCreateIndexUsing(SQLCreateIndexStatement)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLSelectItem)
com.alibaba.druid.sql.parser.SQLExprParser.parseOrderBy()
com.alibaba.druid.pool.DruidDataSource.validationQueryCheck()
com.alibaba.druid.wall.WallProvider.recordStats(Map<String,WallSqlTableStat>,Map<String,WallSqlFunctionStat>)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.println()
com.alibaba.druid.mock.MockDriver.connect(String,Properties)
com.alibaba.druid.sql.ast.expr.SQLAllColumnExpr.accept0(SQLASTVisitor)
com.alibaba.druid.wall.WallTableStat.addSqlTableStat(WallSqlTableStat)
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.createChain()
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseAlterTable(boolean)
com.alibaba.druid.sql.parser.Lexer.identifierEquals(String)
com.alibaba.druid.sql.parser.SQLExprParser.createColumnDefinition()
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(SQLBinaryOpExpr)
com.alibaba.druid.sql.parser.Lexer.nextTokenNotOrNull()
com.alibaba.druid.filter.encoding.EncodingConvertFilter.connection_connect(FilterChain,Properties)
com.alibaba.druid.wall.WallProvider.getConfig()
com.alibaba.druid.pool.DruidAbstractDataSource.isAsyncCloseConnectionEnable()
com.alibaba.druid.pool.DruidAbstractDataSource.testConnectionInternal(DruidConnectionHolder,Connection)
com.alibaba.druid.wall.spi.WallVisitorUtils.preVisitCheck(WallVisitor,SQLObject)
com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.createChain()
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.config(VisitorFeature,boolean)
com.alibaba.druid.filter.FilterChainImpl.getDataSource()
com.alibaba.druid.stat.DruidDataSourceStatManager.getInstances()
com.alibaba.druid.sql.PagerUtils.limitOracle(SQLSelect,String,int,int,boolean)
com.alibaba.druid.wall.spi.WallVisitorUtils.getValueFromAttributes(WallVisitor,SQLObject)
com.alibaba.druid.sql.ast.statement.SQLUpdateSetItem.accept0(SQLASTVisitor)
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr.split(SQLBinaryOpExpr,SQLBinaryOperator)
com.alibaba.druid.wall.spi.WallVisitorUtils.initWallTopStatementContext()
com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.evalExpr(String,String,List<Object>)
com.alibaba.druid.sql.parser.Lexer.scanAlias()
com.alibaba.druid.util.Utils.loadFromFile(String,Set<String>)
com.alibaba.druid.pool.DruidAbstractDataSource.getName()
com.alibaba.druid.proxy.DruidDriver.getDataSource(String,Properties)
com.alibaba.druid.sql.ast.SQLObjectImpl.acceptChild(SQLASTVisitor,List<?extendsSQLObject>)
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlSchemaStatVisitor.visit(MySqlCreateTableStatement)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLBinaryOpExprGroup)
com.alibaba.druid.sql.parser.SQLParserFeature.config(int,SQLParserFeature,boolean)
com.alibaba.druid.util.Utils.readFromResource(String)
com.alibaba.druid.support.http.WebStatFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
com.alibaba.druid.stat.DruidDataSourceStatManager.isRegisterToSystemProperty()
com.alibaba.druid.wall.spi.DB2WallProvider.createParser(String)
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLAlterTableStatement)
com.alibaba.druid.sql.PagerUtils.limit(String,String,int,int)
com.alibaba.druid.stat.DruidStatService.registerMBean()
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerSelectParser.parseTableSourceRest(SQLTableSource)
com.alibaba.druid.sql.ast.statement.SQLTruncateStatement.addTableSource(SQLName)
com.alibaba.druid.sql.visitor.VisitorFeature.config(int,VisitorFeature,boolean)
com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.visit(SQLEvalVisitor,SQLNumericLiteralExpr)
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr.setRight(SQLExpr)
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerExprParser.createSelectParser()
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLCreateViewStatement)
com.alibaba.druid.filter.FilterChainImpl.connection_isClosed(ConnectionProxy)
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parsePartition()
com.alibaba.druid.support.json.JSONWriter.writeDate(Date)
com.alibaba.druid.proxy.jdbc.WrapperProxyImpl.putAttribute(String,Object)
com.alibaba.druid.stat.JdbcStatManager.reset()
com.alibaba.druid.sql.parser.SQLExprParser.xor()
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlASTVisitorAdapter.endVisit(MySqlOutFileExpr)
com.alibaba.druid.sql.ast.statement.SQLCharacterDataType.clone()
com.alibaba.druid.support.json.JSONParser.nextChar()
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.executeQuery()
com.alibaba.druid.sql.ast.SQLObjectImpl.hasBeforeComment()
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExprGroup.add(SQLExpr)
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr.split(List<SQLExpr>,SQLExpr,SQLBinaryOperator)
com.alibaba.druid.filter.stat.StatFilter.internalBeforeStatementExecute(StatementProxy,String)
com.alibaba.druid.filter.stat.StatFilter.mergeSql(String,String)
com.alibaba.druid.sql.ast.SQLObjectImpl.acceptChild(SQLASTVisitor,SQLObject)
com.alibaba.druid.sql.ast.statement.SQLSelect.accept0(SQLASTVisitor)
com.alibaba.druid.sql.dialect.hive.parser.HiveStatementParser.createSQLSelectParser()
com.alibaba.druid.sql.parser.SQLExprParser.orderBy(List<SQLSelectOrderByItem>,SQLObject)
com.alibaba.druid.filter.FilterChainImpl.resultSetMetaData_getColumnType(ResultSetMetaDataProxy,int)
com.alibaba.druid.sql.ast.expr.SQLPropertyExpr.clone()
com.alibaba.druid.support.logging.LogFactory.getLog(String)
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(MySqlSelectQueryBlock)
com.alibaba.druid.wall.spi.WallVisitorUtils.addViolation(WallVisitor,int,String,SQLObject)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLAggregateExpr)
com.alibaba.druid.pool.DruidPooledConnection.transactionRecord(String)
com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.nameRest(SQLName)
com.alibaba.druid.support.json.JSONWriter.writeObject(Object)
com.alibaba.druid.filter.stat.StatFilter.statementCreateAfter(StatementProxy)
com.alibaba.druid.wall.WallSqlTableStat.getTruncateCount()
com.alibaba.druid.wall.WallContext.current()
com.alibaba.druid.pool.DruidConnectionHolder.addTrace(DruidPooledStatement)
com.alibaba.druid.sql.parser.Lexer.scanString2()
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printIndent()
com.alibaba.druid.sql.parser.Lexer.isOperator(char)
com.alibaba.druid.wall.spi.SQLServerWallVisitor.preVisit(SQLObject)
com.alibaba.druid.proxy.jdbc.ResultSetMetaDataProxyImpl.createChain()
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLExprTableSource)
com.alibaba.druid.sql.repository.SchemaRepository.findTable(SQLName)
com.alibaba.druid.pool.DruidPooledPreparedStatement.getPreparedStatementHolder()
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlASTVisitorAdapter.endVisit(SQLIntervalExpr)
com.alibaba.druid.filter.stat.StatFilter.statementPrepareAfter(PreparedStatementProxy)
com.alibaba.druid.pool.DruidPooledConnection.getCatalog()
com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseIndexHintList(SQLTableSource)
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlEvalVisitorImpl.registerFunction(String,Function)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printCreateTable(SQLCreateTableStatement,boolean)
com.alibaba.druid.wall.spi.MySqlWallVisitor.getUpdateCheckItems()
com.alibaba.druid.wall.spi.WallVisitorUtils.checkFunction(WallVisitor,SQLMethodInvokeExpr)
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(SQLUpdateStatement)
com.alibaba.druid.stat.JdbcResultSetStat.afterClose(long)
com.alibaba.druid.pool.DruidPooledStatement.checkOpen()
com.alibaba.druid.sql.parser.Lexer.addComment(String)
com.alibaba.druid.pool.DruidDataSourceFactory.createDataSourceInternal(Properties)
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerStatementParser.parseCommit()
com.alibaba.druid.sql.dialect.odps.parser.OdpsStatementParser.parseSelect()
com.alibaba.druid.filter.FilterChainImpl.resultSet_getMetaData(ResultSetProxy)
com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr.getName()
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.setFeatures(int)
com.alibaba.druid.sql.ast.statement.SQLCharacterDataType.toString()
com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.visit(SQLEvalVisitor,SQLMethodInvokeExpr)
com.alibaba.druid.sql.parser.Lexer.subString(int,int)
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(SQLSelectStatement)
com.alibaba.druid.sql.parser.Lexer.isKeepComments()
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printTableSource(SQLTableSource)
com.alibaba.druid.sql.ast.statement.SQLExprTableSource.cloneTo(SQLExprTableSource)
com.alibaba.druid.sql.ast.expr.SQLDefaultExpr.accept0(SQLASTVisitor)
com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock.accept0(MySqlASTVisitor)
com.alibaba.druid.filter.stat.StatFilter.dataSource_releaseConnection(FilterChain,DruidPooledConnection)
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLExprTableSource)
com.alibaba.druid.sql.PagerUtils.limitDB2(SQLSelect,String,int,int,boolean)
com.alibaba.druid.sql.dialect.odps.parser.OdpsStatementParser.createSQLSelectParser()
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLColumnDefinition)
com.alibaba.druid.sql.visitor.SchemaStatVisitor.accept(List<?extendsSQLObject>)
com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterChain,PreparedStatementProxy)
com.alibaba.druid.sql.parser.SQLSelectParser.parseOrderBy()
com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseTableSourceRest(SQLTableSource)
com.alibaba.druid.stat.JdbcSqlStat.getExecuteCount()
com.alibaba.druid.pool.DruidAbstractDataSource.getID()
com.alibaba.druid.wall.WallProvider.getWhiteSql(String)
com.alibaba.druid.wall.spi.WallVisitorUtils.check(WallVisitor,SQLPropertyExpr)
com.alibaba.druid.sql.ast.statement.SQLUnionQuery.accept0(SQLASTVisitor)
com.alibaba.druid.pool.DruidAbstractDataSource.setCreateError(Throwable)
com.alibaba.druid.pool.DruidPooledStatement.transactionRecord(String)
com.alibaba.druid.filter.logging.LogFilter.statementPrepareCallAfter(CallableStatementProxy)
com.alibaba.druid.sql.dialect.sqlserver.visitor.SQLServerOutputVisitor.visit(SQLServerTop)
com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock.accept0(SQLASTVisitor)
com.alibaba.druid.stat.JdbcStatementStat.beforeExecute()
com.alibaba.druid.pool.DruidPooledStatement.getResultSet()
com.alibaba.druid.sql.ast.expr.SQLMethodInvokeExpr.accept0(SQLASTVisitor)
com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterChain,Properties)
com.alibaba.druid.proxy.jdbc.WrapperProxyImpl.clearAttributes()
com.alibaba.druid.filter.FilterChainImpl.connection_prepareCall(ConnectionProxy,String,int,int)
com.alibaba.druid.pool.DruidDataSource.initFromSPIServiceLoader()
com.alibaba.druid.sql.ast.expr.SQLExprUtils.equals(SQLExpr,SQLExpr)
com.alibaba.druid.support.console.Option.printHelp(PrintStream,String)
com.alibaba.druid.sql.ast.statement.SQLSelect.getOrderBy()
com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.parseAliasExpr(String)
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.setWhere(SQLExpr)
com.alibaba.druid.sql.dialect.sqlserver.visitor.SQLServerOutputVisitor.visit(SQLExprTableSource)
com.alibaba.druid.wall.spi.DB2WallVisitor.visit(SQLSelectStatement)
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.executeQuery(String)
com.alibaba.druid.sql.ast.expr.SQLInListExpr.setExpr(SQLExpr)
com.alibaba.druid.sql.parser.Lexer.stringVal()
com.alibaba.druid.util.jdbc.PreparedStatementBase.setBinaryStream(int,InputStream)
com.alibaba.druid.support.http.stat.WebAppStat.getSessionStat(String,boolean)
com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(String)
com.alibaba.druid.sql.parser.SQLExprParser.parseDataTypeRest(SQLDataType)
com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(String,int,int,int)
com.alibaba.druid.sql.visitor.SchemaStatVisitor.visit(SQLCreateTableStatement)
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseReplace()
com.alibaba.druid.filter.FilterManager.existsFilter(List<Filter>,String)
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.executeUpdate(String)
com.alibaba.druid.sql.ast.SQLObjectImpl.getAttribute(String)
com.alibaba.druid.wall.spi.SQLServerWallVisitor.toSQL(SQLObject)
com.alibaba.druid.sql.parser.SQLExprParser.parsePrimaryKey()
com.alibaba.druid.filter.FilterAdapter.statement_getUpdateCount(FilterChain,StatementProxy)
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parseInterval()
com.alibaba.druid.pool.DruidAbstractDataSource.incrementExecuteUpdateCount()
com.alibaba.druid.pool.DruidDataSource.emptySignal()
com.alibaba.druid.pool.DruidPooledPreparedStatement.close()
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.endVisit(SQLBinaryOpExpr)
com.alibaba.druid.sql.ast.SQLObjectImpl.toString()
com.alibaba.druid.filter.logging.LogFilter.configFromProperties(Properties)
com.alibaba.druid.pool.DruidPooledStatement.executeBatch()
com.alibaba.druid.wall.spi.OracleWallVisitor.visit(SQLSelectStatement)
com.alibaba.druid.pool.DruidDataSource.handleConnectionException(DruidPooledConnection,Throwable,String)
com.alibaba.druid.sql.ast.expr.SQLCharExpr.clone()
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSchedule()
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.endVisit(SQLCharExpr)
com.alibaba.druid.pool.DruidDataSource.decrementPoolingCount()
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.createCheck()
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseCommit()
com.alibaba.druid.sql.visitor.ParameterizedOutputVisitorUtils.parameterize(String,String)
com.alibaba.druid.sql.parser.SQLParser.getLexer()
com.alibaba.druid.support.profile.ProfileEntryKey.hashCode()
com.alibaba.druid.pool.DruidDataSource.getDataSourceStat()
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.getOrderBy()
com.alibaba.druid.sql.dialect.oracle.parser.OracleCreateTableParser.parseOrganization(OracleCreateTableStatement)
com.alibaba.druid.sql.ast.expr.SQLPropertyExpr.getName()
com.alibaba.druid.pool.DruidDataSourceFactory.getObjectInstance(Object,Name,Context,Hashtable<?,?>)
com.alibaba.druid.sql.parser.SQLExprParser.parseColumn()
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.relationalRest(SQLExpr)
com.alibaba.druid.pool.DruidDataSource.removeAbandoned()
com.alibaba.druid.sql.PagerUtils.count(String,String)
com.alibaba.druid.sql.dialect.postgresql.ast.expr.PGTypeCastExpr.toString()
com.alibaba.druid.proxy.jdbc.ResultSetProxyImpl.getStatementProxy()
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.endVisit(SQLIntegerExpr)
com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.createStatement()
com.alibaba.druid.filter.FilterChainImpl.resultSet_next(ResultSetProxy)
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.createParemeter(int)
com.alibaba.druid.pool.DruidAbstractDataSource.getCompositeData()
com.alibaba.druid.pool.DruidAbstractDataSource.createResultSetId()
com.alibaba.druid.wall.spi.WallVisitorUtils.getValue_or(WallVisitor,List<SQLExpr>)
com.alibaba.druid.support.http.stat.WebURIStat.getValue(boolean)
com.alibaba.druid.pool.DruidPooledConnection.getConnectedTimeNano()
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parseSegmentAttributes(OracleSegmentAttributes)
com.alibaba.druid.sql.SQLUtils.toMySqlString(SQLObject)
com.alibaba.druid.wall.spi.MySqlWallVisitor.isDenyTable(String)
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.getStartWith()
com.alibaba.druid.pool.DruidPooledConnection.checkState()
com.alibaba.druid.sql.ast.statement.SQLDeleteStatement.removeCondition(String)
com.alibaba.druid.filter.FilterEventAdapter.connection_createStatement(FilterChain,ConnectionProxy)
com.alibaba.druid.wall.spi.WallVisitorUtils.checkSqlExpr(SQLExpr)
com.alibaba.druid.wall.WallSqlTableStat.incrementSelectCount()
com.alibaba.druid.mock.MockConnection.createMockStatement()
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parseColumnRest(SQLColumnDefinition)
com.alibaba.druid.util.FnvHash.fnv1a_64(String)
com.alibaba.druid.sql.ast.statement.SQLDeleteStatement.setTableSource(SQLTableSource)
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.isCharType(long)
com.alibaba.druid.sql.ast.SQLObjectImpl.getAttributes()
com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlOutFileExpr.setColumnsEnclosedBy(SQLLiteralExpr)
com.alibaba.druid.sql.PagerUtils.createCountItem(String)
com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlUpdateStatement.isLowPriority()
com.alibaba.druid.sql.ast.SQLLimit.setRowCount(SQLExpr)
com.alibaba.druid.filter.FilterChainImpl.statement_setMaxRows(StatementProxy,int)
com.alibaba.druid.sql.ast.statement.SQLCreateTableStatement.getSchema()
com.alibaba.druid.sql.parser.Lexer.config(SQLParserFeature,boolean)
com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(ResultSetProxy,int)
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseShowVariants()
com.alibaba.druid.stat.JdbcStatementStat.incrementCreateCounter()
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(ValuesClause)
com.alibaba.druid.pool.DruidAbstractDataSource.getDefaultTransactionIsolation()
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.setFrom(SQLTableSource)
com.alibaba.druid.sql.parser.SQLExprParser.bitAnd()
com.alibaba.druid.filter.stat.StatFilter.statementExecuteQueryAfter(StatementProxy,String,ResultSetProxy)
com.alibaba.druid.stat.JdbcConnectionStat.setActiveCount(int)
com.alibaba.druid.pool.DruidAbstractDataSource.setDriver(Driver)
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute()
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLIdentifierExpr)
com.alibaba.druid.filter.FilterChainImpl.connection_clearWarnings(ConnectionProxy)
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseRollback()
com.alibaba.druid.filter.stat.StatFilterContext.addUpdateCount(int)
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.getRawObject()
com.alibaba.druid.wall.WallContext.clearContext()
com.alibaba.druid.sql.dialect.oracle.ast.stmt.OracleSelectTableReference.accept0(OracleASTVisitor)
com.alibaba.druid.filter.FilterChainImpl.connection_isReadOnly(ConnectionProxy)
com.alibaba.druid.support.profile.Profiler.release(long)
com.alibaba.druid.mock.MockConnection.createStatement()
com.alibaba.druid.pool.DruidAbstractDataSource.incrementCachedPreparedStatementCount()
com.alibaba.druid.stat.JdbcConnectionStat.afterConnected(long)
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.getHintsSize()
com.alibaba.druid.filter.FilterChainImpl.statement_getResultSet(StatementProxy)
com.alibaba.druid.wall.spi.MySqlWallVisitor.getConfig()
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlSchemaStatVisitor.visit(MySqlDeleteStatement)
com.alibaba.druid.pool.DruidPooledStatement.execute(String)
com.alibaba.druid.sql.ast.statement.SQLSelect.getXmlPath()
com.alibaba.druid.pool.DruidPooledStatement.getWarnings()
com.alibaba.druid.sql.parser.SQLSelectParser.parseGroupByItem()
com.alibaba.druid.filter.stat.StatFilter.statement_close(FilterChain,StatementProxy)
com.alibaba.druid.stat.JdbcSqlStat.getValue(boolean)
com.alibaba.druid.sql.ast.expr.SQLPropertyExpr.computeHashCode64()
com.alibaba.druid.stat.DruidStatService.returnJSONResult(int,Object)
com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setNull(PreparedStatementProxy,int,int)
com.alibaba.druid.stat.JdbcSqlStat.incrementExecuteSuccessCount()
com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(List<SQLStatement>)
com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.parseDataTypeRest(SQLDataType)
com.alibaba.druid.filter.FilterAdapter.statement_getMaxRows(FilterChain,StatementProxy)
com.alibaba.druid.sql.parser.SQLExprParser.parseUpdateSetItem()
com.alibaba.druid.mock.MockResultSet.updateObject(int,Object)
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parseConstaint()
com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setObject(PreparedStatementProxy,int,Object)
com.alibaba.druid.pool.PreparedStatementHolder.isEnterOracleImplicitCache()
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseCreateServer()
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.createParameter(long)
com.alibaba.druid.sql.parser.SQLStatementParser.parseHiveInsert()
com.alibaba.druid.stat.JdbcSqlStat.histogramRecord(long)
com.alibaba.druid.sql.ast.expr.SQLPropertyExpr.setOwner(SQLExpr)
com.alibaba.druid.pool.DruidPooledStatement.incrementExecuteUpdateCount()
com.alibaba.druid.sql.dialect.odps.ast.OdpsStatementImpl.accept0(SQLASTVisitor)
com.alibaba.druid.sql.parser.SQLExprParser.xorRest(SQLExpr)
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(MySqlDeleteStatement)
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.setInto(SQLExpr)
com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.setAutoCommit(boolean)
com.alibaba.druid.filter.stat.StatFilter.createSqlStat(StatementProxy,String)
com.alibaba.druid.stat.JdbcSqlStat.addExecuteTime(long)
com.alibaba.druid.util.JdbcUtils.getDriverClassName(String)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLPartitionValue)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLPartitionByRange)
com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.eval(String,SQLObject,Object...)
com.alibaba.druid.sql.SQLUtils.toSQLString(List<SQLStatement>,String,List<Object>)
com.alibaba.druid.sql.parser.SQLStatementParser.parseUse()
com.alibaba.druid.wall.WallConfig.getUpdateCheckHandler()
com.alibaba.druid.wall.WallContext.create(String)
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLSetStatement)
com.alibaba.druid.sql.SQLUtils.addCondition(String,String,String)
com.alibaba.druid.stat.DruidStatManagerFacade.resetAll()
com.alibaba.druid.sql.visitor.functions.OneParamFunctions.eval(SQLEvalVisitor,SQLMethodInvokeExpr)
com.alibaba.druid.pool.PreparedStatementPool.put(PreparedStatementHolder)
com.alibaba.druid.pool.DruidPooledStatement.incrementExecuteCount()
com.alibaba.druid.sql.visitor.ExportParameterVisitorUtils.exportParameter(List<Object>,SQLExpr)
com.alibaba.druid.pool.DruidAbstractDataSource.getPasswordCallback()
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(SQLExprTableSource)
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExprGroup.accept0(SQLASTVisitor)
com.alibaba.druid.util.jdbc.ResultSetMetaDataBase.getColumn(int)
com.alibaba.druid.wall.WallContext.incrementFunctionInvoke(String)
com.alibaba.druid.sql.visitor.ParameterizedOutputVisitorUtils.parameterize(String,String,List<Object>)
com.alibaba.druid.sql.dialect.oracle.visitor.OracleOutputVisitor.visit(OracleCreateTypeStatement)
com.alibaba.druid.sql.visitor.SchemaStatVisitor.visit(SQLCreateViewStatement)
com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlCharExpr.accept0(MySqlASTVisitor)
com.alibaba.druid.sql.parser.SQLExprParser.and()
com.alibaba.druid.sql.parser.SQLSelectParser.parseTableSourceQueryTableExpr(SQLExprTableSource)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLNotNullConstraint)
com.alibaba.druid.wall.WallProvider.getTableStat(String)
com.alibaba.druid.pool.DruidPooledResultSet.checkException(Throwable)
com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.close()
com.alibaba.druid.sql.ast.expr.SQLInListExpr.isNot()
com.alibaba.druid.filter.FilterChainImpl.callableStatement_getObject(CallableStatementProxy,String)
com.alibaba.druid.sql.parser.Lexer.nextTokenLParen()
com.alibaba.druid.pool.DruidPooledResultSet.updateInt(int,int)
com.alibaba.druid.sql.ast.statement.SQLInsertInto.addValueCause(ValuesClause)
com.alibaba.druid.support.http.stat.WebAppStat.getStatValue(boolean)
com.alibaba.druid.stat.DruidStatService.getSqlStat(Integer)
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.setLastExecuteStartNano()
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parseUsingIndex()
com.alibaba.druid.sql.ast.statement.SQLUnique.cloneTo(SQLUnique)
com.alibaba.druid.util.FnvHash.hashCode64(String,int,int)
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.close()
com.alibaba.druid.filter.FilterChainImpl.connection_getCatalog(ConnectionProxy)
com.alibaba.druid.sql.ast.expr.SQLPropertyExpr.toString()
com.alibaba.druid.filter.FilterEventAdapter.statementCreateAfter(StatementProxy)
com.alibaba.druid.sql.parser.Lexer.initBuff(int)
com.alibaba.druid.sql.ast.statement.SQLSelectItem.getExpr()
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLAssignItem)
com.alibaba.druid.sql.ast.statement.SQLSelectGroupByClause.accept0(SQLASTVisitor)
com.alibaba.druid.sql.ast.statement.SQLColumnDefinition.getDataType()
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.partitionClauseRest(SQLPartitionBy)
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.getCachedSelectList()
com.alibaba.druid.sql.ast.SQLObjectImpl.getBeforeCommentsDirect()
com.alibaba.druid.stat.JdbcDataSourceStat.getSqlStatMap()
com.alibaba.druid.pool.DruidDataSource.initValidConnectionChecker()
com.alibaba.druid.sql.ast.statement.SQLSelectOrderByItem.getNullsOrderType()
com.alibaba.druid.wall.spi.DB2WallVisitor.preVisit(SQLObject)
com.alibaba.druid.filter.FilterChainImpl.callableStatement_getObject(CallableStatementProxy,int)
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.createParameterNull(int)
com.alibaba.druid.pool.DruidAbstractDataSource.setFailContinuous(boolean)
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseAlterFunction()
com.alibaba.druid.pool.DruidDataSource.putLast(DruidConnectionHolder,long)
com.alibaba.druid.sql.dialect.odps.parser.OdpsExprParser.primaryRest(SQLExpr)
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(MySqlUpdateStatement)
com.alibaba.druid.pool.DruidAbstractDataSource.setUsername(String)
com.alibaba.druid.wall.WallUtils.isValidateSqlServer(String,WallConfig)
com.alibaba.druid.sql.dialect.oracle.visitor.OracleOutputVisitor.visit(OracleCreateTableStatement)
com.alibaba.druid.sql.dialect.sqlserver.visitor.SQLServerOutputVisitor.visit(SQLServerSelectQueryBlock)
com.alibaba.druid.mock.MockPreparedStatement.execute()
com.alibaba.druid.pool.DruidAbstractDataSource.closePreapredStatement(PreparedStatementHolder)
com.alibaba.druid.stat.JdbcStatManager.getInstance()
com.alibaba.druid.pool.DruidPooledConnection.checkStateInternal()
com.alibaba.druid.wall.spi.OracleWallVisitor.setSqlEndOfComment(boolean)
com.alibaba.druid.sql.parser.SQLExprParser.isCharType(String)
com.alibaba.druid.sql.ast.statement.SQLColumnDefinition.accept0(SQLASTVisitor)
com.alibaba.druid.sql.dialect.oracle.parser.OracleStatementParser.parseBlock()
com.alibaba.druid.wall.spi.DB2WallProvider.createWallVisitor()
com.alibaba.druid.pool.DruidDataSource.initFromWrapDriverUrl()
com.alibaba.druid.sql.dialect.oracle.visitor.OracleOutputVisitor.visit(OracleSelectTableReference)
com.alibaba.druid.sql.ast.expr.SQLNumberExpr.getNumber()
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr.merge(ParameterizedVisitor,SQLBinaryOpExpr)
com.alibaba.druid.sql.ast.statement.SQLTableSourceImpl.getAlias()
com.alibaba.druid.support.profile.ProfileEntry.getName()
com.alibaba.druid.sql.parser.SQLStatementParser.parseAssignItems(List<?superSQLAssignItem>,SQLObject)
com.alibaba.druid.sql.parser.Lexer.addSymbol()
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.printInsertColumns(List<SQLExpr>)
com.alibaba.druid.wall.WallContext.incrementCommentCount()
com.alibaba.druid.mock.MockConnection.handleSleep()
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printAndAccept(List<?extendsSQLObject>,String)
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLReplaceStatement)
com.alibaba.druid.wall.spi.WallVisitorUtils.checkUpdateForMultiTenant(WallVisitor,SQLUpdateStatement)
com.alibaba.druid.mock.MockCallableStatement.registerOutParameter(int,int)
com.alibaba.druid.sql.PagerUtils.createCountUseSubQuery(SQLSelect,String)
com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.visit(SQLEvalVisitor,SQLCharExpr)
com.alibaba.druid.filter.stat.StatFilterContext.executeAfter(String,long,Throwable)
com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr.getSimpleName()
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlSchemaStatVisitor.visit(MySqlExplainStatement)
com.alibaba.druid.proxy.DruidDriver.connect(String,Properties)
com.alibaba.druid.filter.config.ConfigFilter.getPublicKey(Properties,Properties)
com.alibaba.druid.filter.FilterAdapter.init(DataSourceProxy)
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.setParameters(List<Object>)
com.alibaba.druid.filter.FilterChainImpl.reset()
com.alibaba.druid.filter.FilterChainImpl.callableStatement_registerOutParameter(CallableStatementProxy,int,int)
com.alibaba.druid.wall.spi.WallVisitorUtils.getConditionValue(WallVisitor,SQLExpr,boolean)
com.alibaba.druid.support.json.JSONUtils.parse(String)
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerStatementParser.parseInsert0(SQLInsertInto,boolean)
com.alibaba.druid.sql.SQLTransformUtils.transformOracleToPostgresql(SQLMethodInvokeExpr)
com.alibaba.druid.wall.spi.SQLServerWallVisitor.getConfig()
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.setSqlStat(JdbcSqlStat)
com.alibaba.druid.util.JdbcUtils.isMySqlDriver(String)
com.alibaba.druid.pool.DruidDataSource.getStatData()
com.alibaba.druid.sql.dialect.sqlserver.visitor.SQLServerOutputVisitor.visit(SQLSetStatement)
com.alibaba.druid.sql.parser.SQLStatementParser.parseTruncate()
com.alibaba.druid.wall.WallProvider.setName(String)
com.alibaba.druid.sql.parser.SQLStatementParser.parseWith()
com.alibaba.druid.filter.FilterAdapter.connection_createStatement(FilterChain,ConnectionProxy)
com.alibaba.druid.sql.parser.SQLExprParser.createSelectParser()
com.alibaba.druid.support.json.JSONParser.scanDigit()
com.alibaba.druid.sql.repository.SchemaRepository.resolve(SQLStatement,SchemaResolveVisitor.Option...)
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.createParameter(int,Object)
com.alibaba.druid.sql.repository.SchemaResolveVisitorFactory.resolve(SchemaResolveVisitor,SQLInsertStatement)
com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.eq(Object,Object)
com.alibaba.druid.stat.JdbcDataSourceStat.getStatementStat()
com.alibaba.druid.util.jdbc.PreparedStatementBase.setString(int,String)
com.alibaba.druid.sql.parser.SQLStatementParser.parseDropView(boolean)
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.getMaxRows()
com.alibaba.druid.stat.JdbcStatManager.getStatContext()
com.alibaba.druid.sql.ast.statement.SQLUpdateStatement.getHints()
com.alibaba.druid.util.Base64.base64toInt(char,byte[])
com.alibaba.druid.wall.spi.WallVisitorUtils.check(WallVisitor,SQLSelectItem)
com.alibaba.druid.filter.stat.StatFilter.statementExecuteAfter(StatementProxy,String,boolean)
com.alibaba.druid.sql.dialect.oracle.parser.OracleSelectParser.queryRest(SQLSelectQuery)
com.alibaba.druid.support.http.stat.WebAppStat.computeUserAgent(String)
com.alibaba.druid.filter.FilterChainImpl.connection_getTransactionIsolation(ConnectionProxy)
com.alibaba.druid.util.Base64.base64ToByteArray(String,boolean)
com.alibaba.druid.pool.DruidPooledStatement.executeUpdate(String)
com.alibaba.druid.sql.dialect.oracle.visitor.OracleOutputVisitor.visit(OraclePrimaryKey)
com.alibaba.druid.support.http.stat.WebAppStat.getURIStat(String,boolean)
com.alibaba.druid.filter.FilterChainImpl.resultSet_getObject(ResultSetProxy,int)
com.alibaba.druid.wall.WallConfig.isConstArithmeticAllow()
com.alibaba.druid.util.JdbcUtils.close(Closeable)
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(SQLSelectItem)
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(int,String)
com.alibaba.druid.sql.parser.SQLExprParser.multiplicative()
com.alibaba.druid.sql.ast.statement.SQLCreateTableStatement.findColumn(long)
com.alibaba.druid.pool.DruidPooledConnection.beforeExecute()
com.alibaba.druid.proxy.DruidDriver.createDataSourceId()
com.alibaba.druid.pool.xa.JtdsXAConnection.close()
com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.parseAssignItem()
com.alibaba.druid.sql.parser.SQLCreateTableParser.parseCreateTable(boolean)
com.alibaba.druid.sql.parser.Lexer.nextTokenIdent()
com.alibaba.druid.support.http.ResourceServlet.initAuthEnv()
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.printValuesList(List<SQLInsertStatement.ValuesClause>)
com.alibaba.druid.wall.spi.WallVisitorUtils.checkDelete(WallVisitor,SQLDeleteStatement)
com.alibaba.druid.wall.spi.SQLServerWallProvider.createExportParameterVisitor()
com.alibaba.druid.pool.DruidAbstractDataSource.isDupCloseLogEnable()
com.alibaba.druid.sql.ast.statement.SQLSelect.setOrderBy(SQLOrderBy)
com.alibaba.druid.filter.FilterAdapter.connection_prepareCall(FilterChain,ConnectionProxy,String)
com.google.gson.Gson.newJsonReader(Reader)
com.google.gson.GsonBuilder.create()
com.google.gson.Gson.newJsonWriter(Writer)
com.google.gson.Gson.getAdapter(TypeToken<T>)
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(JsonWriter,T)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)
com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>)
com.google.gson.Gson.toJson(Object,Type,Appendable)
com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>)
com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)
com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)
com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)
com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>)
com.google.gson.TypeAdapter.nullSafe()
com.google.gson.internal.Streams.parse(JsonReader)
com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>)
com.google.gson.stream.JsonReader.peek()
com.google.gson.Gson.fromJson(String,Type)
com.google.gson.Gson.toJsonTree(Object,Type)
com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)
com.google.gson.internal.JavaVersion.parseDotted(String)
com.google.gson.stream.JsonReader.doPeek()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)
com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)
com.google.gson.stream.JsonWriter.beginObject()
com.google.gson.JsonParser.parse(Reader)
com.google.gson.Gson.doubleAdapter(boolean)
com.google.gson.Gson.floatAdapter(boolean)
com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(Type,Class<?superT>)
com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)
com.google.gson.Gson.toJson(Object,Type,JsonWriter)
com.google.gson.JsonStreamParser.next()
com.google.gson.TypeAdapter.fromJson(Reader)
com.google.gson.Gson.fromJson(String,Class<T>)
com.google.gson.internal.Excluder.excludeClassInStrategy(Class<?>,boolean)
com.google.gson.internal.JavaVersion.determineMajorJavaVersion()
com.google.gson.internal.LinkedTreeMap.find(K,boolean)
com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>)
com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(Gson,TypeToken<T>)
com.google.gson.stream.JsonWriter.beforeValue()
com.google.gson.reflect.TypeToken.hashCode()
com.google.gson.stream.JsonReader.isLenient()
com.google.gson.stream.JsonWriter.beforeName()
com.google.gson.internal.LinkedTreeMap.rebalance(Node<K,V>,boolean)
com.google.gson.stream.JsonReader.nextUnquotedValue()
com.google.gson.internal.JavaVersion.getMajorJavaVersion()
com.google.gson.internal.Primitives.isPrimitive(Type)
com.google.gson.internal.bind.MapTypeAdapterFactory.create(Gson,TypeToken<T>)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(Field,boolean)
com.google.gson.stream.JsonReader.nextNonWhitespace(boolean)
com.google.gson.stream.JsonWriter.open(int,String)
com.google.gson.internal.bind.TreeTypeAdapter.read(JsonReader)
com.google.gson.JsonPrimitive.getAsCharacter()
com.google.gson.internal.Excluder.excludeField(Field,boolean)
com.google.gson.internal.LinkedHashTreeMap.findByObject(Object)
com.google.gson.internal.bind.TreeTypeAdapter.newFactoryWithMatchRawType(TypeToken<?>,Object)
com.google.gson.internal.Excluder.create(Gson,TypeToken<T>)
com.google.gson.JsonArray.add(Character)
com.google.gson.internal.Streams.write(JsonElement,JsonWriter)
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)
com.google.gson.stream.JsonReader.locationString()
com.google.gson.stream.JsonWriter.setHtmlSafe(boolean)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(Field,boolean,Excluder)
com.google.gson.stream.JsonWriter.name(String)
com.google.gson.DefaultDateTypeAdapter.deserializeToDate(String)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field)
com.google.gson.internal.reflect.ReflectionAccessor.getInstance()
org.jcodec.scale.BaseResampler.resample(Picture,Picture)
org.jcodec.common.io.VLC.readVLC(BitReader)
org.jcodec.codecs.h264.decode.CoeffTransformer.idct4x4(int[])
org.jcodec.codecs.h264.decode.MBlockDecoderBase.predictChromaInter(Frame[][],MvList,int,int,int,Picture,PartPred[])
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeVert(Picture,int,int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockChroma(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.common.io.VLC.invert(int,int,int,IntArrayList,IntArrayList)
org.jcodec.codecs.h264.decode.SliceDecoder.initContext()
org.jcodec.codecs.h264.decode.FrameReader.createSliceReader(ByteBuffer,NALUnit)
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int,boolean)
org.jcodec.codecs.h264.encode.MBEncoderP16x16.luma(Picture,int[],int,int,BitWriter,int,int[])
org.jcodec.codecs.h264.encode.MBEncoderI16x16.luma(Picture,int,int,BitWriter,int,Picture,CAVLC)
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsV(Picture,int,int[][])
org.jcodec.common.model.Picture.createCropped(int,int,ColorSpace,Rect)
org.jcodec.common.tools.MathUtil.clip(int,int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.initUnsafe()
org.jcodec.codecs.h264.encode.MBEncoderP16x16.mvEstimate(Picture,int,int,int,int)
org.jcodec.codecs.h264.io.CAVLC.writeACBlock(BitWriter,int,int,MBType,MBType,int[],VLC[],int,int,int[])
org.jcodec.codecs.h264.decode.MBlock.clear()
org.jcodec.codecs.h264.io.CABAC.initModels(int[][],SliceType,int,int)
org.jcodec.codecs.h264.encode.MotionEstimator.estimate(Picture,byte[],int,int,int,int)
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeHoris(Picture,int,int,int,int,int,int,int)
org.jcodec.codecs.h264.encode.MBDeblocker.filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs4(int,int,byte[],byte[],int,int,int,int,int,int,int,int,boolean)
org.jcodec.containers.mps.MPSDemuxer.probe(ByteBuffer)
org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode16x16(MBlock,Picture,Frame[][],PartPred)
org.jcodec.codecs.h264.decode.CAVLCReader.readUE(BitReader)
org.jcodec.codecs.h264.decode.MBlockDecoderUtils.collectPredictors(DecoderState,Picture,int)
org.jcodec.codecs.h264.decode.MBlockDecoderBase.decodeChroma(MBlock,int,int,boolean,boolean,Picture,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma12(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsH(Picture,int,int[][])
org.jcodec.codecs.h264.decode.SliceReader.readIntraNxN(MBlock)
org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBP(EncodedMB,EncodedMB,EncodedMB)
org.jcodec.codecs.h264.io.CAVLC.codeTableChromaDC()
org.jcodec.codecs.h264.decode.SliceReader.readMacroblock(MBlock)
org.jcodec.codecs.h264.decode.SliceDecoder.decodeMacroblocks(Frame[][])
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.deblockFrame(Picture)
org.jcodec.codecs.h264.io.CAVLC.readCoeffs(BitReader,VLC,VLC[],int[],int,int,int[])
org.jcodec.codecs.h264.decode.CoeffTransformer._idct4x4(int[],int[])
org.jcodec.codecs.h264.H264Utils.unescapeNAL(ByteBuffer)
org.jcodec.codecs.h264.BufferH264ES.nextFrame()
org.jcodec.codecs.h264.decode.MBlockDecoderIntraNxN.decode(MBlock,Picture)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma03(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.containers.mp3.MPEGAudioDemuxer.skipJunkBB(int,ByteBuffer)
org.jcodec.codecs.h264.decode.SliceReader.readPredictionInter16x16(MBlock,int,boolean,boolean,int,PartPred)
org.jcodec.codecs.common.biari.MDecoder.renormalize()
org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockLuma(Picture,Picture,int,int,int,int,int)
org.jcodec.codecs.h264.decode.CAVLCReader.readUEtrace(BitReader,String)
org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDC(int[][],int,boolean,boolean,byte[],byte[],byte[])
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBoundaryStrenth(boolean,boolean,boolean,int,int,int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.MBlockDecoderUtils.copyCol(byte[],int,int,int,byte[])
org.jcodec.codecs.h264.io.CABAC.readCoeffs(MDecoder,BlockType,int[],int,int,int[],int[],int[])
org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter16x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,int,PartPred)
org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeAC(int[],int,int[])
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillVerticalEdge(Picture,int,int,int[][])
org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])
org.jcodec.codecs.h264.decode.CAVLCReader.readNBit(BitReader,int,String)
org.jcodec.common.io.BitWriter.putInt(int)
org.jcodec.codecs.h264.decode.MBlockDecoderInter.residualInter(MBlock,Frame[][],boolean,boolean,int,int,int)
org.jcodec.codecs.h264.decode.CoeffTransformer.invDC4x4(int[])
org.jcodec.codecs.h264.decode.PredictionMerger.copyPrediction(byte[],int,int,int,int,byte[])
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillHorizontalEdge(Picture,int,int,int[][])
org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBGeneric(EncodedMB,EncodedMB,EncodedMB,int[][],int[][])
org.jcodec.codecs.h264.encode.MBEncoderI16x16.extractDC(int[][])
org.jcodec.common.IntArrayList.set(int,int)
org.jcodec.common.io.VLCBuilder.setInt(int,int,int)
org.jcodec.codecs.h264.io.CAVLC.readACBlock(BitReader,int[],int,int,boolean,MBType,boolean,MBType,int,int,int[])
org.jcodec.codecs.h264.H264Utils.escapeNAL(ByteBuffer,ByteBuffer)
org.jcodec.containers.mp4.boxes.NodeBox.findBox(Box,List<String>,Collection<Box>)
org.jcodec.codecs.h264.encode.MBDeblocker._filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int,boolean)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma32(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.SliceReader.readResidualAC(boolean,boolean,int,MBType,int,int,int,int,int,int[])
org.jcodec.common.io.VLCBuilder.getVLC()
org.jcodec.codecs.h264.encode.MBEncoderHelper.pubBlkOnePlane(byte[],int,byte[],int,int,int,int)
org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSubtract(byte[],int,int,int,int,int[],byte[],int,int)
org.jcodec.codecs.h264.encode.MBEncoderI16x16.save()
org.jcodec.codecs.h264.decode.SliceReader.readLuma(MBlock,boolean,boolean,int,int)
org.jcodec.codecs.h264.decode.MBlockSkipDecoder.predictPSkip(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,Picture)
org.jcodec.codecs.h264.decode.SliceReader.readMBlock(MBlock,SliceType)
org.jcodec.codecs.h264.decode.BlockInterpolator.initSafe()
org.jcodec.codecs.h264.H264Encoder.encodeSlice(SeqParameterSet,PictureParameterSet,Picture,ByteBuffer,boolean,int,SliceType,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaXX(byte[],int,int,byte[],int,int,int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.SliceReader.readMVD(int,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.SliceReader._readChromaAC(boolean,boolean,int,int[],int,MBType,boolean,int[][])
org.jcodec.codecs.h264.encode.MBDeblocker.filterBsChr(int,int,int,byte[],byte[],int,int,int,int)
org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictDC(int[][],boolean,boolean,byte[],byte[],int,byte[])
org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeAC8x8(int[],int,int[])
org.jcodec.codecs.h264.decode.MBlockDecoderBase.chromaAC(boolean,boolean,int,int,int[],int,int,MBType,boolean,int[][])
org.jcodec.codecs.h264.decode.MBlockDecoderUtils.mergeResidual(Picture,int[][][],int[][],int[][])
org.jcodec.codecs.h264.io.CAVLC.writeBlockGen(BitWriter,int[],VLC[],int,int,int[],VLC)
org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.decode(MBlock,Frame[][],Picture,SliceType,boolean)
org.jcodec.codecs.h264.io.CAVLC.writeLevels(BitWriter,int[],int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.encode.MBEncoderHelper.putBlkPic(Picture,Picture,int,int)
org.jcodec.codecs.h264.decode.SliceReader.readIntra16x16(int,MBlock)
org.jcodec.codecs.h264.decode.SliceDecoder.putMacroblock(Picture,Picture,int,int)
org.jcodec.codecs.h264.io.CAVLC.codeTableLuma(boolean,MBType,int,boolean,MBType,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.SliceDecoder.decodeMBlockIInt(MBlock,Picture)
org.jcodec.codecs.h264.decode.SliceReader.readChromaResidual(MBlock,boolean,boolean,int)
org.jcodec.codecs.h264.encode.MBDeblocker.filterBs4Chr(int,int,byte[],byte[],int,int,int,int)
org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma4x4(MBlock)
org.jcodec.common.IntArrayList.fill(int,int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRoundInt(int[],int,int[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictWithMode(int,int[][],boolean,boolean,byte[],byte[],byte[],int,byte[])
org.jcodec.codecs.h264.decode.FrameReader.readFrame(List<ByteBuffer>)
org.jcodec.codecs.h264.encode.MBDeblocker.deblockBorder(int[],int,byte[],int,byte[],int,int[][],int[][],boolean)
org.jcodec.containers.mp4.boxes.NodeBox.findAllPath(Box,Class<T>,String[])
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma00Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.encode.MBEncoderI16x16.writeAC(CAVLC,int,int,BitWriter,int,int,int[][],int,MBType,MBType,int[])
org.jcodec.scale.RgbToYuv420j.transform(Picture,Picture)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma10(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.common.model.Picture.getPlaneWidth(int)
org.jcodec.scale.Yuv420pToRgb.transform(Picture,Picture)
org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictVertical(int[][],int,boolean,byte[],byte[])
org.jcodec.codecs.h264.decode.CoeffTransformer.idct8x8(int[])
org.jcodec.codecs.h264.decode.MBlockSkipDecoder.decodeSkip(MBlock,Frame[][],Picture,SliceType)
org.jcodec.codecs.common.biari.MDecoder.decodeBin(int)
org.jcodec.codecs.h264.decode.CoeffTransformer.reorderDC4x4(int[])
org.jcodec.containers.mp4.demuxer.MP4DemuxerTrack.getNextFrame(ByteBuffer)
org.jcodec.common.dct.SimpleIDCT10Bit.idctCol(int[],int)
org.jcodec.common.model.Picture.getPlaneData(int)
org.jcodec.codecs.h264.decode.SliceReader.read16x16AC(boolean,boolean,int,int,int[],int,int,int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.SliceReader.readPredictionI4x4Block(boolean,boolean,MBType,MBType,int,int,int)
org.jcodec.codecs.h264.encode.MBEncoderI16x16.chroma(Picture,int,int,BitWriter,int,Picture)
org.jcodec.codecs.h264.decode.SliceReader.readResidualLuma(MBlock,boolean,boolean,int,int)
org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.fromTrack(AbstractMP4DemuxerTrack)
org.jcodec.common.io.BitReader.read1Bit()
org.jcodec.codecs.h264.decode.MBlockDecoderUtils.collectChromaPredictors(DecoderState,Picture,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma01(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.io.model.MBType.isIntra()
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRound(byte[],int,int[],int,int,int,int,int,int)
org.jcodec.common.IntArrayList.add(int)
org.jcodec.codecs.h264.decode.PredictionMerger.mergePrediction(SliceHeader,int,int,PartPred,int,byte[],byte[],int,int,int,int,byte[],Frame[][],int)
org.jcodec.codecs.h264.decode.SliceReader.readChromaAC(boolean,boolean,int,int,MBType,int[],int,int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma00(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictHorizontal(int[][],int,boolean,byte[],byte[])
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma01Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveVect(MvList,int,int,int,int)
org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeDC4x4(int[],int)
org.jcodec.codecs.prores.ProresDecoder.readACCoeffs(BitReader,int[],int[],int,int[],int,int)
org.jcodec.codecs.h264.H264Utils.gotoNALUnitWithArray(ByteBuffer)
org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter16x8(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,int,MvList,PartPred,PartPred,int)
org.jcodec.common.io.BitReader.readNBit(int)
org.jcodec.codecs.h264.encode.MBEncoderP16x16.chroma(Picture,int[],int[],int,int,BitWriter,int)
org.jcodec.common.model.Picture.fill(int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.encode.MBEncoderHelper.takeExtendBorder(byte[],int,int,int,int,byte[],int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.SliceReader.readInter16x8(PartPred,PartPred,MBlock)
org.jcodec.codecs.h264.io.write.CAVLCWriter.writeUE(BitWriter,int)
org.jcodec.codecs.h264.decode.CAVLCReader.readZeroBitCount(BitReader,String)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma03Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.SliceReader.readRefIdx(boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode8x16(MBlock,Picture,Frame[][],PartPred,PartPred)
org.jcodec.common.io.BitWriter.write1Bit(int)
org.jcodec.codecs.h264.decode.aso.FlatMBlockMapper.leftAvailable(int)
org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.decodeSub8x8(MBlock,int,Picture[],int,int,int,int,int,int,boolean,boolean,boolean,boolean,MvList,int,int,int,int,int,Picture,int,int)
org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveMvsIntra(DeblockerInput,int,int)
org.jcodec.codecs.h264.H264Encoder.copyCol(byte[],int,int,byte[])
org.jcodec.common.IntArrayList.size()
org.jcodec.codecs.h264.decode.SliceReader.readCodedBlockPatternInter(boolean,boolean,int,int,MBType,MBType)
org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter8x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,PartPred,PartPred)
org.jcodec.common.model.Picture.getData()
org.jcodec.codecs.h264.encode.MBDeblocker.filterBs4(int,int,byte[],byte[],int,int,int,int,int,int,int,int)
org.jcodec.codecs.common.biari.MDecoder.decodeBinBypass()
org.jcodec.codecs.h264.decode.CoeffTransformer.fdct4x4(int[])
org.jcodec.codecs.h264.io.CAVLC.readLumaDCBlock(BitReader,int[],int,boolean,MBType,boolean,MBType,int[])
org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveMvs(DeblockerInput,MvList,int,int)
org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCInside(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])
org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictVertical(int[],boolean,byte[],int,int,int,byte[])
org.jcodec.codecs.prores.ProresDecoder.readCodeword(BitReader,Codebook)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRound(byte[],int,int[],int,int,int,int,int,int)
org.jcodec.codecs.h264.encode.MBEncoderP16x16.encodeMacroblock(Picture,int,int,BitWriter,EncodedMB,EncodedMB,EncodedMB,int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma10Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.common.model.Picture.planeEquals(Picture,int)
org.jcodec.codecs.h264.encode.MBEncoderI16x16.lumaDCPred(int,int,byte[][])
org.jcodec.scale.RgbToBgr.transform(Picture,Picture)
org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.decode(MBlock,Picture)
org.jcodec.codecs.h264.io.write.CAVLCWriter.writeSE(BitWriter,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaX0(byte[],int,int,byte[],int,int,int,int,int,int,int)
org.jcodec.containers.mkv.util.EbmlUtil.toHexString(byte[])
org.jcodec.common.model.Picture.getPlaneHeight(int)
org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictPlane(int[][],int,boolean,boolean,byte[],byte[],byte[],byte[])
org.jcodec.common.model.Picture.createPicture(int,int,byte[][],ColorSpace)
org.jcodec.common.model.Picture.getColor()
org.jcodec.api.FrameGrab.detectDecoder(SeekableDemuxerTrack)
org.jcodec.common.logging.Logger.message(LogLevel,String,Object[])
org.jcodec.codecs.h264.encode.MotionEstimator.sad(byte[],int,byte[],int,int)
org.jcodec.codecs.h264.H264Encoder.writeSPS(ByteBuffer,SeqParameterSet)
org.jcodec.codecs.h264.decode.SliceDecoder.decodeMBlockP(MBlock,Picture,Frame[][])
org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictHorizontal(int[],boolean,byte[],byte[],int,int,int,byte[])
org.jcodec.common.io.BitReader.readFast16(int)
org.jcodec.api.FrameGrab.createFrameGrab(SeekableByteChannel)
org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictVertical(int[],boolean,boolean,byte[],byte[],int,int,int,byte[])
org.jcodec.codecs.h264.decode.SliceDecoder.decode(MBlock,SliceType,Picture,Frame[][])
org.jcodec.codecs.h264.decode.MBlockDecoderBase.calcQpChroma(int,int)
org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSafe(byte[],int,int,int,int,byte[],int,int)
org.jcodec.codecs.h264.decode.MBlockDecoderUtils.calcMVPredictionMedian(int,int,int,int,boolean,boolean,boolean,boolean,int,int)
org.jcodec.codecs.h264.encode.MBEncoderI16x16.predictChroma(Picture,int[][],byte[][],int,int,int)
org.jcodec.codecs.mpeg4.MPEG4Bitstream.initVLCTables()
org.jcodec.common.dct.SimpleIDCT10Bit.idctRow(int[],int)
org.jcodec.common.dct.SimpleIDCT10Bit.idct10(int[],int)
org.jcodec.codecs.prores.ProresDecoder.putBlock(byte[],byte[],int,int,int[],int,int,int)
org.jcodec.scale.RgbToYuv420p.transform(Picture,Picture)
org.jcodec.common.ArrayUtil.toByteArrayShifted(int...)
org.jcodec.codecs.h264.decode.PredictionMerger.weightPrediction(SliceHeader,int,int,byte[],int,int,int,int,byte[])
org.jcodec.containers.mp4.demuxer.AbstractMP4DemuxerTrack.nextChunk()
org.jcodec.common.tools.MathUtil.toSigned(int,int)
org.jcodec.common.io.BitReader.checkNBit(int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma32Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.containers.mp4.boxes.Header.getFourcc()
org.jcodec.common.IntIntMap.put(int,int)
org.jcodec.codecs.h264.decode.SliceReader.setZeroCoeff(int,int,int)
org.jcodec.codecs.raw.RAWVideoEncoder.encodeFrame(Picture,ByteBuffer)
org.jcodec.codecs.h264.decode.SliceDecoder.fillCoeff(MBlock,int,int)
org.jcodec.codecs.h264.decode.SliceHeaderReader.readPart2(SliceHeader,NALUnit,SeqParameterSet,PictureParameterSet,BitReader)
org.jcodec.common.io.FileChannelWrapper.read(ByteBuffer)
org.jcodec.common.model.Picture.getCroppedWidth()
org.jcodec.codecs.h264.io.model.NALUnit.read(ByteBuffer)
org.jcodec.common.IntObjectMap.size()
org.jcodec.codecs.h264.io.CABAC.readCodedBlockFlagLumaAC(MDecoder,BlockType,int,int,int,MBType,MBType,boolean,boolean,int,int,int,MBType)
org.jcodec.common.IntArrayList.toArray()
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma21(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.encode.MBEncoderP16x16.writeAC(int,int,int,BitWriter,int,int,int[][],int)
org.jcodec.codecs.h264.decode.SliceReader.readChromaDC(int,boolean,boolean,int[],int,MBType)
org.jcodec.platform.Platform.arrayEqualsByte(byte[],byte[])
org.jcodec.codecs.aac.AACUtils.streamInfoToADTS(ByteBuffer,boolean,int,int)
org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictVerticalRight(int[],boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])
org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeAC(int[],int)
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.getIdxBeta(int,int)
org.jcodec.codecs.h264.io.CAVLC.getCoeffTokenVLCForLuma(boolean,MBType,int,boolean,MBType,int)
org.jcodec.codecs.common.biari.MDecoder.decodeFinalBin()
org.jcodec.common.io.VLCBuilder.set(int,String)
org.jcodec.codecs.mpeg4.MPEG4DCT.idctRows(short[])
org.jcodec.common.io.BitReader.check16Bits()
org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.residualLumaI16x16(MBlock,boolean,boolean,int,int)
org.jcodec.codecs.h264.decode.SliceReader.getNALUnit()
org.jcodec.codecs.h264.decode.SliceReader.readResidualInter(MBlock,boolean,boolean,int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma23Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.io.CAVLC.writeChrDCBlock(BitWriter,int[],VLC[],int,int,int[])
org.jcodec.codecs.h264.encode.MBEncoderHelper.putBlk(byte[],int[],byte[],int,int,int,int,int)
org.jcodec.codecs.h264.encode.MBEncoderP16x16.median(int,int,int,int,boolean,boolean,boolean,boolean)
org.jcodec.common.model.Picture.cropSub(byte[],int,int,int,int,int,int,byte[])
org.jcodec.codecs.h264.decode.SliceReader.readMBlockI(MBlock)
org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCTopBorder(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])
org.jcodec.codecs.mpeg4.MPEG4Interpolator.fulpel16x16(byte[],byte[],int,int,int,int,int)
org.jcodec.codecs.h264.decode.MBlockDecoderUtils.savePrediction8x8(DecoderState,int,MvList)
org.jcodec.codecs.h264.io.CABAC.readRefIdx(MDecoder,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)
org.jcodec.common.io.NIOUtils.read(ByteBuffer,int)
org.jcodec.containers.mp4.BoxFactory.newBox(Header)
org.jcodec.codecs.h264.H264Encoder.collectPredictors(Picture,int)
org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])
org.jcodec.api.transcode.filters.ColorTransformFilter.filter(Picture,PixelStore)
org.jcodec.codecs.png.PNGDecoder.filterPaeth(byte[],int,byte[],int)
org.jcodec.codecs.h264.H264Encoder.putLastMBLine()
org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictVertical(int[][],boolean,byte[],int,byte[])
org.jcodec.common.io.BitReader.checkNBitDontCare(int)
org.jcodec.codecs.h264.encode.MBEncoderI16x16.encodeMacroblock(Picture,int,int,BitWriter,EncodedMB,EncodedMB,EncodedMB,int,int)
org.jcodec.containers.mxf.model.UL.toString()
org.jcodec.codecs.mpeg12.MPEGPredOct.getPix6(byte[],int,int,int,int,int,int,int[])
org.jcodec.codecs.h264.decode.MBlockDecoderBase.decodeChromaResidual(MBlock,boolean,boolean,int,int,int,int)
org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeDC4x4(int[],int,int[])
org.jcodec.codecs.h264.BufferH264ES.detectPoc(ByteBuffer,NALUnit,SliceHeader)
org.jcodec.containers.mp4.boxes.MetaBox.getKeyedMeta()
org.jcodec.common.dct.SparseIDCT.finish(int[])
org.jcodec.codecs.h264.encode.MBDeblocker.deblockBorderChroma(int[],int,byte[],int,byte[],int,int[][],int[][],boolean)
org.jcodec.codecs.h264.decode.SliceReader.readLuma8x8CAVLC(MBlock,boolean,boolean,int,int)
org.jcodec.containers.mp3.MPEGAudioDemuxer.validHeader(int)
org.jcodec.codecs.h264.decode.aso.FlatMBlockMapper.topRightAvailable(int)
org.jcodec.common.StringUtils.splitC(String,char)
org.jcodec.codecs.h264.decode.SliceReader.readMBlockP(MBlock)
org.jcodec.common.JCodecUtil2.readBER32(ByteBuffer)
org.jcodec.common.io.BitReader.readInt()
org.jcodec.common.io.BitReader.skip(int)
org.jcodec.common.model.Picture.getHeight()
org.jcodec.codecs.h264.io.model.SeqParameterSet.readVUIParameters(BitReader)
org.jcodec.codecs.mpeg4.MPEG4Interpolator.vertMiddle16Safe(byte[],byte[],int,int,int,int)
org.jcodec.containers.mxf.model.KLV.readKL(SeekableByteChannel)
org.jcodec.containers.mp4.muxer.CodecMP4MuxerTrack.addFrame(Packet)
org.jcodec.codecs.mpeg4.MPEG4Bitstream.readBi(BitReader,MPEG4DecodingContext,int,int,Macroblock,Macroblock,Vector,Vector)
org.jcodec.codecs.prores.ProresToThumb2x2.putGroup(byte[],byte[],int,int[],int)
org.jcodec.codecs.h264.io.CABAC.readSubMbTypeP(MDecoder)
org.jcodec.common.io.BitReader.bitsToAlign()
org.jcodec.codecs.h264.io.CAVLC.totalCoeff(int)
org.jcodec.codecs.mpeg4.MPEG4Bitstream.checkResyncMarker(BitReader,int)
org.jcodec.api.transcode.VideoFrameWithPacket.compareTo(VideoFrameWithPacket)
org.jcodec.common.io.DummyBitstreamReader.read1BitInt()
org.jcodec.codecs.mpeg4.MPEG4Bitstream.readInterModeCoeffs(BitReader,MPEG4DecodingContext,int,Macroblock,Macroblock,Macroblock,Macroblock,Macroblock)
org.jcodec.common.Assert.assertEquals(int,int)
org.jcodec.codecs.h264.decode.SliceReader.readIntra8x16(PartPred,PartPred,MBlock)
org.jcodec.common.io.BitWriter.position()
org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeDC2x2(int[],int)
org.jcodec.containers.mxf.model.KLV.readKLFromBuffer(ByteBuffer,long)
org.jcodec.codecs.prores.ProresDecoder.decodeSlice(ByteBuffer,int[],int[],int[],int,int,int,short,byte[][],byte[][],int,int,int)
org.jcodec.codecs.h264.io.model.SeqParameterSet.read(ByteBuffer)
org.jcodec.codecs.h264.decode.PredictionMerger.weight(byte[],int,int,int,int,int,int,int,byte[])
org.jcodec.codecs.png.PNGDecoder.filterUp(byte[],int,byte[])
org.jcodec.codecs.h264.io.model.RefPicMarkingIDR.isUseForlongTerm()
org.jcodec.codecs.h264.io.CAVLC.writeTrailingOnes(BitWriter,int[],int,int)
org.jcodec.common.ArrayUtil.sumByte3(byte[],int,int)
org.jcodec.codecs.mpa.ChannelSynthesizer.synthesize(float[],short[],int)
org.jcodec.common.tools.MathUtil.log2(int)
org.jcodec.codecs.h264.BufferH264ES.calcPoc(int,NALUnit,SliceHeader)
org.jcodec.codecs.mpa.Mp3Decoder.mdctDecode(int,Granule,float[])
org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeDC2x2(int[],int,int[])
org.jcodec.containers.mkv.SeekHeadFactory.estimeteSeekSize(int,int)
org.jcodec.codecs.h264.decode.MBlockDecoderBase.chromaDC(int,boolean,boolean,int[],int,int,MBType)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma23(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.common.io.BitReader.nextIgnore()
org.jcodec.codecs.h264.io.CABAC.readCodedBlockFlagChromaDC(MDecoder,int,int,MBType,MBType,boolean,boolean,int,int,MBType)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma30Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.io.CAVLC.writeRuns(BitWriter,int[],int,int)
org.jcodec.codecs.h264.io.CABAC.readMBSkipFlag(MDecoder,SliceType,boolean,boolean,int)
org.jcodec.codecs.prores.ProresEncoder.writeACCoeffs(BitWriter,int[],int[],int,int[],int)
org.jcodec.codecs.h264.io.CABAC.readCoeffAbsLevel(MDecoder,BlockType,int,int)
org.jcodec.common.IntIntMap.createArray(int)
org.jcodec.codecs.mpa.MpaPqmf.computeFilter(int,float[],short[],int,float)
org.jcodec.containers.mp3.MPEGAudioDemuxer.skipJunk()
org.jcodec.codecs.h264.H264Decoder.decodeFrame(ByteBuffer,byte[][])
org.jcodec.common.tools.Debug.trace(Object...)
org.jcodec.codecs.h264.decode.SliceReader.readChromaPredMode(int,boolean,boolean)
org.jcodec.common.model.Rect.getWidth()
org.jcodec.common.AutoFileChannelWrapper.read(ByteBuffer)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma30(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.containers.mkv.MKVType.createById(byte[],long)
org.jcodec.codecs.mpa.Mp3Bitstream.readCoeffs(BitReader,Granule,int,int,int,int[])
org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.getCodecPrivate(AbstractMP4DemuxerTrack)
org.jcodec.codecs.h264.H264Encoder.encodeMacroblock(MBType,Picture,int,int,BitWriter,int,int)
org.jcodec.codecs.aac.ADTSParser.read(ByteBuffer)
org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaX0Unsafe(byte[],int,int,byte[],int,int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.CAVLCReader.readSE(BitReader,String)
org.jcodec.codecs.h264.io.CABAC.prev4x4PredModeFlag(MDecoder)
org.jcodec.containers.mp4.boxes.NodeBox.findFirstPath(NodeBox,Class<T>,String[])
org.jcodec.scale.LanczosResampler.buildTaps(int,int,double,short[][])
org.jcodec.containers.mp4.boxes.NodeBox.findFirst(NodeBox,Class<T>,String)
org.jcodec.codecs.h264.io.CAVLC.readChromaDCBlock(BitReader,int[],boolean,boolean)
org.jcodec.codecs.h264.encode.MBEncoderI16x16.chromaPredBlk1(int,int,int,byte[])
org.jcodec.containers.mp3.MPEGAudioDemuxer.calcFrameSize(int)
org.jcodec.codecs.h264.decode.SliceReader.readInter16x16(PartPred,MBlock)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma22(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.SliceDecoder.decodeFromReader(SliceReader)
org.jcodec.codecs.png.PNGDecoder.filterAvg3(byte[],byte[],int)
org.jcodec.codecs.h264.H264Const.usesList(PartPred,int)
org.jcodec.codecs.h264.decode.SliceReader.readSub8x8(MBlock,int,boolean,boolean,int,int,int,MBType,MBType,PartPred,PartPred,PartPred,int)
org.jcodec.containers.mkv.MKVParser.nextElement()
org.jcodec.codecs.h264.encode.MBEncoderI16x16.transform(Picture,int,int[][],byte[][],int,int)
org.jcodec.scale.BaseResampler.getPel(Picture,int,int,int)
org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma8x8CAVLC(MBlock)
org.jcodec.codecs.h264.decode.MBlockDecoderBDirect.predictBSpatialDirect(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,PartPred[],Picture,int[])
org.jcodec.codecs.h264.io.CABAC.readMBQpDelta(MDecoder,MBType)
org.jcodec.scale.BaseResampler.normalizeAndGenerateFixedPrecision(double[],int,short[])
org.jcodec.containers.mkv.boxes.MkvBlock.read(ByteBuffer)
org.jcodec.common.IntObjectMap.keys()
org.jcodec.codecs.h264.decode.CoeffTransformer.invDC2x2(int[])
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRoundInt(int[],int,int[],int,int,int,int,int,int)
org.jcodec.codecs.mpa.MpaHeader.calculateFramesize(MpaHeader)
org.jcodec.platform.Platform.newInstance(Class<T>,Object[])
org.jcodec.containers.mp4.demuxer.MP4DemuxerTrack.nextFrame()
org.jcodec.containers.mkv.MKVType.values()
org.jcodec.containers.mp4.boxes.MovieBox.getMovieHeader()
org.jcodec.containers.mp4.boxes.Box.path(String)
org.jcodec.codecs.h264.encode.DumbRateControl.accept(int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaXXUnsafe(byte[],int,int,byte[],int,int,int,int,int,int,int,int)
org.jcodec.containers.mp4.ChunkWriter.write(Chunk)
org.jcodec.codecs.h264.decode.RefListManager.getRefList()
org.jcodec.codecs.png.PNGDecoder.decodeData(IHDR,PLTE,TRNS,List<ByteBuffer>,byte[][])
org.jcodec.common.io.NIOUtils.fetchFromChannel(ReadableByteChannel,int)
org.jcodec.codecs.h264.io.model.SeqParameterSet.getPicHeightInMbs(SeqParameterSet)
org.jcodec.codecs.h264.H264Utils.wipePSinplace(ByteBuffer,Collection<ByteBuffer>,Collection<ByteBuffer>)
org.jcodec.codecs.h264.decode.SliceReader.readCodedBlockPatternIntra(boolean,boolean,int,int,MBType,MBType)
org.jcodec.codecs.h264.H264Utils.saveCodecPrivate(List<ByteBuffer>,List<ByteBuffer>)
org.jcodec.codecs.mpeg4.MPEG4Bitstream.packCoeff(int,int,int)
org.jcodec.codecs.png.PNGDecoder.filterSub4(byte[],byte[],int)
org.jcodec.codecs.h264.encode.MBEncoderI16x16.transformChroma(int[][])
org.jcodec.common.model.ColorSpace.calcBitsPerPixel()
org.jcodec.containers.mp4.boxes.TrakBox.getCodedSize()
org.jcodec.codecs.h264.decode.SliceReader.read16x16DC(boolean,boolean,int,int[])
org.jcodec.containers.mp4.boxes.UdtaBox.setFactory(IBoxFactory)
org.jcodec.codecs.mpeg4.MPEG4BiRenderer.mergePred(Macroblock)
org.jcodec.scale.Yuv420pToRgb.YUV420pToRGBN2N(byte,byte,byte,byte[],int)
org.jcodec.common.io.NIOUtils.skip(ByteBuffer,int)
org.jcodec.codecs.h264.H264Encoder.encodeFrame(Picture,ByteBuffer)
org.jcodec.containers.mp4.boxes.AudioSampleEntry.getEndian()
org.jcodec.codecs.h264.io.CABAC.codedBlockPatternIntra(MDecoder,boolean,boolean,int,int,MBType,MBType)
org.jcodec.platform.Platform.arrayEqualsObj(Object[],Object[])
org.jcodec.codecs.h264.decode.MBlock.cbpLuma()
org.jcodec.codecs.mpeg4.MPEG4Interpolator.horzMiddle8(byte[],int,byte[],int,int,int,int,int,int,int)
org.jcodec.codecs.h264.io.CABAC.readMVD(MDecoder,int,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)
org.jcodec.codecs.h264.decode.MBlockDecoderBase.initScalingMatrix(SliceHeader)
org.jcodec.codecs.h264.decode.PredictionMerger.mergeWeight(byte[],byte[],int,PartPred,int,int,int,int,int,int,int,int,byte[])
org.jcodec.codecs.h264.decode.BlockInterpolator.merge(byte[],byte[],int,int,int,int)
org.jcodec.codecs.h264.encode.EncodedMB.getMx()
org.jcodec.common.io.FileChannelWrapper.setPosition(long)
org.jcodec.common.IntIntMap.get(int)
org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.copyAdd(byte[],int,int[],int,int,byte[])
org.jcodec.codecs.prores.ProresToThumb2x2._putChroma(byte[],byte[],int,int,int,int,int[],int,int,int)
org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictHorizontal(int[][],boolean,byte[],int,byte[])
org.jcodec.containers.mp4.boxes.AudioSampleEntry.getFormat()
org.jcodec.common.dct.IntDCT.prepare_range_limit_table()
org.jcodec.containers.mp3.MPEGAudioDemuxer.getField(int,int)
org.jcodec.codecs.h264.io.CABAC.readIntraChromaPredMode(MDecoder,int,MBType,MBType,boolean,boolean)
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma12Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.common.io.BitWriter.writeNBit(int,int)
org.jcodec.codecs.h264.decode.SliceReader.readPredictionInter16x8(MBlock,int,boolean,boolean,PartPred,PartPred,int)
org.jcodec.containers.mps.MPSUtils.mpeg2Pes(int,int,int,ByteBuffer,long)
org.jcodec.codecs.raw.RAWVideoDecoder.copy(ByteBuffer,byte[],int)
org.jcodec.common.dct.IDCT2x2.idct(int[],int)
org.jcodec.codecs.mpeg4.MPEG4Interpolator.vertMiddle8Safe(byte[],int,byte[],int,int,int,int)
org.jcodec.common.model.Picture.getLowBitsNum()
org.jcodec.codecs.h264.decode.SliceReader.readLuma8x8CABAC(MBlock,int,int)
org.jcodec.codecs.mpeg4.MPEG4Decoder.decodeIFrame(BitReader,MPEG4DecodingContext,byte[][])
org.jcodec.containers.mp4.boxes.Box.write(ByteBuffer)
org.jcodec.codecs.h264.io.model.SliceType.isInter()
org.jcodec.containers.mp4.boxes.NodeBox.getBoxes()
org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictPlane(int[][],boolean,boolean,byte[],byte[],byte[],int,byte[])
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma33Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.codecs.common.biari.MDecoder.readOneByte()
org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.interpolateTop(boolean,boolean,byte[],byte[],int,int,byte[])
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma11(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.common.io.DummyBitstreamReader.readNBit(int)
org.jcodec.containers.mxf.model.UL.equals(Object)
org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma8x8CABAC(MBlock)
org.jcodec.codecs.h264.decode.SliceReader.readSubMb8x8(MBlock,int,int,boolean,boolean,int,int,int,MBType,MBType,MBType,PartPred,PartPred,PartPred,int)
org.jcodec.containers.mkv.CuesFactory.estimateCuePointSize(int,int,int)
org.jcodec.codecs.mpeg4.MPEG4Interpolator.interpolate16x16QP(byte[],byte[],int,int,int,int,int,int,int,boolean)
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.mvThresh(int,int)
org.jcodec.codecs.mpeg4.MPEG4DCT.idctPut(byte[][],short[][],boolean)
org.jcodec.containers.mp4.boxes.MediaHeaderBox.parse(ByteBuffer)
org.jcodec.codecs.h264.encode.MBEncoderI16x16.putChroma(byte[],int,int,int,int[][],byte[][])
org.jcodec.codecs.h264.decode.MBlockDecoderInter.calcMVPrediction16x8Top(int,int,int,int,boolean,boolean,boolean,boolean,int,int)
org.jcodec.containers.mp3.MPEGAudioDemuxer.readFrame(ByteBuffer)
org.jcodec.codecs.mpeg4.MPEG4Renderer.renderMBInter(MPEG4DecodingContext,Picture[],Macroblock,int,boolean)
org.jcodec.codecs.mpeg4.MPEG4Interpolator.horzMiddle16(byte[],byte[],int,int,int,int,int,int,int)
org.jcodec.containers.mp4.MP4Util.getRootAtoms(SeekableByteChannel)
org.jcodec.codecs.h264.decode.CoeffTransformer.fvdDC4x4(int[])
org.jcodec.codecs.h264.encode.MBEncoderI16x16.restorePlane(int[],int[][],int)
org.jcodec.containers.mxf.model.UL.hashCode()
org.jcodec.codecs.h264.H264Utils.skipToNALUnit(ByteBuffer)
org.jcodec.containers.mp4.boxes.TimeToSampleBox.parse(ByteBuffer)
org.jcodec.codecs.h264.H264Utils.isByteBufferIDRSlice(ByteBuffer)
org.jcodec.codecs.h264.encode.MBEncoderHelper.take(byte[],int,int,int,int,byte[],int,int)
org.jcodec.common.dct.SimpleIDCT10Bit.fdctProres10(int[],int)
org.jcodec.codecs.mpa.Mp3Decoder.dequantShort(int[],int,Granule,ScaleFactors,float,float[])
org.jcodec.containers.mp4.boxes.TrakBox.getTrackType(TrakBox)
org.jcodec.codecs.h264.decode.MBlock.cbp(int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma00Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)
org.jcodec.containers.mp4.boxes.TrakBox.getEdits()
org.jcodec.codecs.h264.H264Decoder.createFrame(SeqParameterSet,byte[][],int,SliceType,MvList2D,Frame[][][],int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma0XUnsafe(byte[],int,int,byte[],int,int,int,int,int,int,int)
org.jcodec.codecs.mpeg4.MPEG4Bitstream.readCoeffIntra(BitReader,MPEG4DecodingContext,Macroblock,Macroblock,Macroblock,Macroblock)
org.jcodec.common.StringUtils.splitWorker(String,char,boolean)
org.jcodec.codecs.h264.BufferH264ES.readSliceHeader(ByteBuffer,NALUnit)
org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictDiagonalDownLeft(int[],boolean,boolean,byte[],int,int,int,byte[])
org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma33(byte[],int,byte[],int,int,int,int,int,int)
org.jcodec.common.model.Picture.equals(Object)
org.jcodec.codecs.h264.io.model.NALUnitType.fromValue(int)
org.jcodec.codecs.h264.io.CAVLC.trailingOnes(int)
org.jcodec.containers.mp4.muxer.MP4MuxerTrack.finish(MovieHeaderBox)
org.jcodec.common.model.Picture.getCrop()
org.jcodec.codecs.png.PNGDecoder.filterSub1(byte[],byte[],int)
org.jcodec.codecs.h264.H264Encoder.doEncodeFrame(Picture,ByteBuffer,boolean,int,SliceType)
org.jcodec.containers.mp4.muxer.MP4MuxerTrack.outChunkIfNeeded(int)
org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictHorizontalDown(int[],boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])
org.jcodec.common.dct.DCTRef.fdct(int[],int)
org.jcodec.codecs.h264.encode.MBEncoderI16x16.chromaPredBlk2(int,int,int,byte[])
org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictWithMode(int[][],int,int,boolean,boolean,byte[],byte[],byte[],byte[])
org.jcodec.common.model.Picture.fromPictureHiBD(PictureHiBD)
org.jcodec.codecs.h264.decode.SliceHeaderReader.readReorderingEntries(BitReader)
org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.predict8x8P(MBlock,Picture[],Picture,boolean,int,int,boolean,boolean,boolean,boolean,MvList,PartPred[])
org.jcodec.codecs.mpa.Mp3Decoder.decodeMsStereo(MpaHeader,Granule,ScaleFactors[],float[][])
org.jcodec.codecs.h264.decode.FrameReader.addPps(ByteBuffer)
org.jcodec.scale.BicubicResampler.buildFilterTaps(int,int)
org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma0X(byte[],int,int,byte[],int,int,int,int,int,int,int)
org.jcodec.codecs.h264.io.model.Frame.copyFromFrame(Frame)
org.junit.runners.model.RunnerBuilder.runners(Class<?>[])
org.junit.runners.BlockJUnit4ClassRunner.createTest()
org.junit.runners.BlockJUnit4ClassRunner.validateTestMethods(List<Throwable>)
org.junit.internal.Checks.notNull(T,String)
org.junit.experimental.theories.internal.AllMembersSupplier.getSingleDataPointMethods(ParameterSignature)
org.junit.internal.runners.JUnit4ClassRunner.validate()
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getInjectionType()
org.junit.internal.runners.JUnit4ClassRunner.run(RunNotifier)
org.junit.runners.ParentRunner.classBlock(RunNotifier)
org.junit.runner.Result.createListener()
org.junit.runner.notification.RunNotifier.fireTestSuiteStarted(Description)
org.junit.experimental.max.MaxHistory.readHistory(File)
org.junit.internal.TextListener.printFooter(Result)
org.junit.runners.model.FrameworkMethod.invokeExplosively(Object,Object...)
org.junit.runner.notification.SynchronizedRunListener.testFinished(Description)
org.junit.runners.model.TestClass.getAnnotatedMembers(Map<Class<?extendsAnnotation>,List<T>>,Class<?extendsAnnotation>,boolean)
org.junit.internal.Throwables.getFullStackTrace(Throwable)
org.junit.runners.model.FrameworkMethod.validatePublicVoidNoArg(boolean,List<Throwable>)
org.junit.experimental.theories.internal.Assignments.generateAssignmentsFromTypeAlone(ParameterSignature)
org.junit.runners.BlockJUnit4ClassRunner.collectInitializationErrors(List<Throwable>)
org.junit.runners.model.TestClass.collectAnnotatedMethodValues(Object,Class<?extendsAnnotation>,Class<T>,MemberValueConsumer<T>)
org.junit.experimental.max.MaxHistory.testComparator()
org.junit.internal.requests.MemoizingRequest.getRunner()
org.junit.runners.ParentRunner.getName()
junit.framework.TestSuite.addTest(Test)
org.junit.runners.model.RunnerBuilder.removeParent(Class<?>)
org.junit.runners.BlockJUnit4ClassRunner.validateConstructor(List<Throwable>)
org.junit.runners.ParentRunner.order(Orderer)
org.junit.runner.Request.filterWith(Filter)
org.junit.ComparisonFailure.getMessage()
org.junit.internal.builders.AllDefaultPossibilitiesBuilder.suiteMethodBuilder()
org.junit.internal.runners.SuiteMethod.testFromSuiteMethod(Class<?>)
org.junit.runners.model.TestClass.getAnnotatedMethods()
org.junit.runners.model.FrameworkMethod.validateNoTypeParametersOnArgs(List<Throwable>)
junit.framework.Assert.assertEquals(String,String,String)
org.junit.runner.notification.RunNotifier.fireTestRunFinished(Result)
org.junit.internal.runners.statements.RunBefores.evaluate()
org.junit.experimental.theories.ParameterSignature.signatures(Class<?>[],Annotation[][])
org.junit.runner.notification.SynchronizedRunListener.testSuiteStarted(Description)
org.junit.internal.runners.statements.RunAfters.evaluate()
junit.framework.TestSuite.testAt(int)
org.junit.internal.requests.FilterRequest.getRunner()
org.junit.runners.model.TestClass.collectAnnotatedFieldValues(Object,Class<?extendsAnnotation>,Class<T>,MemberValueConsumer<T>)
org.junit.runner.JUnitCommandLineParseResult.copyArray(String[],int,int)
org.junit.internal.builders.AllDefaultPossibilitiesBuilder.ignoredBuilder()
org.junit.internal.runners.statements.ExpectException.evaluate()
org.junit.runner.JUnitCore.main(String...)
org.junit.runner.JUnitCommandLineParseResult.createRequest(Computer)
org.junit.runners.model.FrameworkMember.isPublic()
org.junit.internal.runners.statements.FailOnTimeout.builder()
org.junit.internal.runners.JUnit38ClassRunner.filter(Filter)
org.junit.experimental.theories.ParameterSignature.buildConvertableTypesMap()
junit.framework.TestCase.countTestCases()
junit.framework.JUnit4TestAdapterCache.createTest(Description)
org.junit.runners.model.FrameworkMethod.hashCode()
org.junit.internal.runners.JUnit38ClassRunner.createAdaptingListener(RunNotifier)
org.junit.rules.ExpectedException.expectMessage(Matcher<String>)
org.junit.internal.runners.statements.FailOnTimeout.getThreadsInGroup(ThreadGroup)
org.junit.runners.ParentRunner.createTestClass(Class<?>)
junit.framework.TestCase.getName()
org.junit.validator.AnnotationValidatorFactory.createAnnotationValidator(ValidateWith)
org.junit.runner.notification.SynchronizedRunListener.testSuiteFinished(Description)
org.junit.runner.Request.classWithoutSuiteMethod(Class<?>)
org.junit.experimental.categories.Categories.isAnyExcluded(Class<?>)
org.junit.Assert.assertThrows(String,Class<T>,ThrowingRunnable)
org.junit.experimental.results.ResultMatchers.failureCountIs(int)
org.junit.runner.Description.createTestDescription(Class<?>,String,Annotation...)
org.junit.runners.Parameterized.validatePublicStaticVoidMethods(Class<?extendsAnnotation>,Integer,List<Throwable>)
org.junit.rules.TemporaryFolder.createTemporaryFolderIn(File)
org.junit.rules.TestWatchman.apply(Statement,FrameworkMethod,Object)
org.junit.experimental.theories.internal.BooleanSupplier.getValueSources(ParameterSignature)
org.junit.runners.model.TestClass.getSuperClasses(Class<?>)
junit.framework.TestSuite.warning(String)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(String)
org.junit.runners.BlockJUnit4ClassRunner.validatePublicConstructor(List<Throwable>)
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.createTest()
org.junit.runner.Computer.getRunner(RunnerBuilder,Class<?>)
org.junit.runners.model.TestClass.getAnnotatedFieldValues(Object,Class<?extendsAnnotation>,Class<T>)
org.junit.runners.RuleContainer.setOrder(Object,int)
junit.framework.JUnit4TestAdapter.getDescription()
org.junit.internal.runners.MethodValidator.assertValid()
org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnType(Type,List<Throwable>)
junit.textui.ResultPrinter.printFooter(TestResult)
org.junit.rules.ErrorCollector.checkThat(String,T,Matcher<T>)
junit.extensions.ActiveTestSuite.waitUntilFinished()
org.junit.runner.JUnitCommandLineParseResult.applyFilterSpecs(Request)
org.junit.internal.runners.MethodRoadie.addFailure(Throwable)
org.junit.runner.Description.createSuiteDescription(String,Annotation...)
org.junit.internal.MethodSorter.getSorter(FixMethodOrder)
org.junit.runners.model.TestClass.getSortedDeclaredFields(Class<?>)
org.junit.runner.JUnitCore.run(Computer,Class<?>...)
org.junit.runners.model.FrameworkMethod.getAnnotations()
org.junit.runners.model.TestClass.getAnnotatedFields()
junit.framework.TestSuite.isPublicTestMethod(Method)
org.junit.runners.model.FrameworkField.getAnnotation(Class<T>)
org.junit.rules.Verifier.apply(Statement,Description)
org.junit.runners.model.FrameworkField.getField()
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(String)
junit.runner.BaseTestRunner.filterLine(String)
org.junit.runners.BlockJUnit4ClassRunner.validateOnlyOneConstructor(List<Throwable>)
org.junit.Assert.assertEquals(long,long)
org.junit.Assert.assertArrayEquals(String,float[],float[],float)
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getName()
org.junit.runner.JUnitCore.removeListener(RunListener)
org.junit.experimental.theories.internal.SpecificDataPointsSupplier.getSingleDataPointFields(ParameterSignature)
org.junit.runner.notification.SynchronizedRunListener.equals(Object)
org.junit.runners.model.FrameworkField.get(Object)
org.junit.internal.builders.AllDefaultPossibilitiesBuilder.junit3Builder()
org.junit.rules.TemporaryFolder.builder()
org.junit.internal.runners.model.EachTestNotifier.fireTestFinished()
org.junit.runners.BlockJUnit4ClassRunner.getTimeout(Test)
org.junit.experimental.theories.PotentialAssignment.forValue(String,Object)
junit.extensions.TestSetup.run(TestResult)
org.junit.runners.BlockJUnit4ClassRunner.testName(FrameworkMethod)
org.junit.experimental.categories.CategoryFilterFactory.parseCategories(String)
org.junit.runner.Description.getChildren()
junit.runner.BaseTestRunner.getFilteredTrace(String)
org.junit.runners.model.FrameworkField.getModifiers()
org.junit.runner.Description.isEmpty()
junit.framework.Assert.assertNotNull(String,Object)
org.junit.experimental.max.MaxCore.buildRunner(Description)
org.junit.Assert.assertEquals(String,long,long)
org.junit.internal.runners.TestClass.getAnnotatedMethods(Class<?extendsAnnotation>)
org.junit.Assert.assertThat(T,Matcher<?superT>)
org.junit.Assert.equalsRegardingNull(Object,Object)
org.junit.runners.ParentRunner.comparator(Sorter)
junit.framework.Assert.assertTrue(String,boolean)
junit.framework.TestCase.setName(String)
org.junit.runners.model.NoGenericTypeParametersValidator.validate(List<Throwable>)
org.junit.runners.Suite.runChild(Runner,RunNotifier)
org.junit.rules.ExpectedException.missingExceptionMessage()
junit.framework.TestSuite.getName()
org.junit.experimental.max.MaxHistory.isNewTest(Description)
org.junit.experimental.categories.Categories.hasAssignableTo(Set<Class<?>>,Class<?>)
junit.runner.BaseTestRunner.getTest(String)
org.junit.runner.manipulation.Ordering.definedBy(Ordering.Factory,Description)
org.junit.experimental.theories.suppliers.TestedOnSupplier.getValueSources(ParameterSignature)
org.junit.runner.notification.RunListener.testSuiteFinished(Description)
org.junit.runners.model.FrameworkMethod.getModifiers()
org.junit.experimental.theories.internal.ParameterizedAssertionError.join(String,Collection<Object>)
org.junit.runner.manipulation.Orderer.order(Collection<Description>)
org.junit.experimental.theories.internal.EnumSupplier.getValueSources(ParameterSignature)
org.junit.experimental.categories.Categories.getExcludedCategory(Class<?>)
org.junit.internal.runners.statements.FailOnTimeout.getStuckThread(Thread)
org.junit.runners.model.FrameworkField.getType()
org.junit.internal.runners.MethodRoadie.runTest()
org.junit.experimental.categories.IncludeCategories.createFilter(List<Class<?>>)
org.junit.Assert.format(String,Object,Object)
org.junit.rules.RunRules.applyAll(Statement,Iterable<TestRule>,Description)
org.junit.runner.notification.Failure.toString()
org.junit.internal.runners.JUnit4ClassRunner.createTest()
org.junit.runners.model.TestClass.getAnnotatedMethodValues(Object,Class<?extendsAnnotation>,Class<T>)
org.junit.internal.TextListener.elapsedTimeAsString(long)
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.testName(FrameworkMethod)
org.junit.internal.builders.AllDefaultPossibilitiesBuilder.junit4Builder()
org.junit.runners.parameterized.TestWithParameters.equals(Object)
org.junit.rules.ExpectedExceptionMatcherBuilder.build()
org.junit.experimental.theories.ParameterSignature.findDeepAnnotation(Annotation[],Class<T>,int)
org.junit.internal.runners.TestClass.getConstructor()
org.junit.rules.Stopwatch.runtime(TimeUnit)
org.junit.internal.matchers.ThrowableCauseMatcher.hasCause(Matcher<?>)
junit.framework.JUnit4TestAdapterCache.asTestList(Description)
org.junit.rules.ErrorCollector.addError(Throwable)
org.junit.internal.Checks.notNull(T)
org.junit.internal.builders.AnnotatedBuilder.getEnclosingClassForNonStaticMemberClass(Class<?>)
org.junit.internal.runners.ErrorReportingRunner.run(RunNotifier)
org.junit.internal.Throwables.asReversedList(List<T>)
org.junit.internal.ArrayComparisonFailure.getMessage()
org.junit.rules.DisableOnDebug.isDebugging(List<String>)
org.junit.internal.management.ManagementFactory.getThreadMXBean()
org.junit.runners.model.FrameworkField.isShadowedBy(FrameworkField)
org.junit.experimental.theories.internal.AllMembersSupplier.addIterableValues(ParameterSignature,String,List<PotentialAssignment>,Iterable<?>)
org.junit.runner.manipulation.Sorter.apply(Object)
org.junit.Assert.failEquals(String,Object)
org.junit.Assert.assertNull(String,Object)
org.junit.runner.manipulation.Filter.matchMethodDescription(Description)
junit.framework.ComparisonCompactor.findCommonPrefix()
org.junit.runner.JUnitCore.defaultComputer()
org.junit.experimental.theories.ParameterSignature.getAnnotation(Class<T>)
org.junit.internal.runners.JUnit4ClassRunner.getDescription()
org.junit.experimental.theories.internal.ParameterizedAssertionError.equals(Object)
org.junit.experimental.theories.internal.Assignments.allUnassigned(Method,TestClass)
org.junit.experimental.theories.ParameterSignature.signatures(Method)
org.junit.rules.ExpectedExceptionMatcherBuilder.allOfTheMatchers()
org.junit.runner.Description.createTestDescription(String,String,Serializable)
org.junit.Assert.failNotEquals(String,Object,Object)
org.junit.internal.InexactComparisonCriteria.assertElementsEqual(Object,Object)
junit.runner.BaseTestRunner.getPreferencesFile()
org.junit.internal.TextListener.getWriter()
org.junit.internal.runners.statements.Fail.evaluate()
org.junit.runners.model.TestClass.isANonStaticInnerClass()
org.junit.experimental.max.MaxHistory.forFolder(File)
org.junit.experimental.runners.Enclosed.filterAbstractClasses(Class<?>[])
org.junit.runner.Description.isSuite()
org.junit.rules.TemporaryFolder.newFolder(String)
org.junit.internal.TextListener.testRunFinished(Result)
org.junit.runner.Description.createSuiteDescription(Class<?>)
org.junit.experimental.max.MaxCore.sortRequest(Request)
org.junit.runners.RuleContainer.add(MethodRule)
org.junit.internal.TextListener.printHeader(long)
org.junit.runner.notification.SynchronizedRunListener.testRunStarted(Description)
org.junit.runner.Runner.testCount()
org.junit.internal.runners.ErrorReportingRunner.getCauses(Throwable)
org.junit.experimental.theories.internal.AllMembersSupplier.addMultiPointMethods(ParameterSignature,List<PotentialAssignment>)
org.junit.rules.TemporaryFolder.recursiveDelete(File)
org.junit.experimental.categories.CategoryValidator.addErrorMessage(List<Exception>,Class<?>)
org.junit.runners.parameterized.TestWithParameters.getParameters()
org.junit.internal.Throwables.rethrowAsException(Throwable)
junit.framework.Assert.assertNull(Object)
junit.framework.Assert.assertEquals(String,double,double,double)
org.junit.rules.TemporaryFolder.newFile(String)
junit.framework.TestResult.errorCount()
org.junit.experimental.results.PrintableResult.testResult(Class<?>)
junit.framework.JUnit4TestCaseFacade.countTestCases()
org.junit.internal.runners.TestMethod.getAfters()
org.junit.experimental.theories.internal.Assignments.buildParameterSupplierFromClass(Class<?extendsParameterSupplier>)
org.junit.experimental.theories.internal.SpecificDataPointsSupplier.getSingleDataPointMethods(ParameterSignature)
org.junit.experimental.theories.ParameterSignature.isAssignableViaTypeConversion(Class<?>,Class<?>)
org.junit.internal.matchers.ThrowableCauseMatcher.describeTo(Description)
junit.textui.ResultPrinter.endTest(Test)
org.junit.internal.AssumptionViolatedException.describeTo(Description)
org.junit.runner.Result.getFailures()
junit.framework.TestResult.addListener(TestListener)
org.junit.internal.runners.model.EachTestNotifier.addFailedAssumption(AssumptionViolatedException)
org.junit.experimental.theories.internal.Assignments.getArgumentStrings(boolean)
org.junit.rules.TemporaryFolder.delete()
org.junit.rules.Stopwatch.starting()
org.junit.Assert.assertEquals(String,float,float,float)
junit.framework.JUnit4TestAdapter.getTests()
junit.framework.Assert.failNotEquals(String,Object,Object)
org.junit.rules.Timeout.apply(Statement,Description)
org.junit.internal.matchers.ThrowableMessageMatcher.matchesSafely(T)
junit.framework.Assert.assertEquals(String,long,long)
org.junit.Assert.failNotSame(String,Object,Object)
junit.framework.TestFailure.exceptionMessage()
junit.framework.TestResult.runCount()
junit.framework.Assert.assertEquals(double,double,double)
org.junit.internal.runners.TestClass.getAfters()
org.junit.runner.FilterFactories.createFilterFactory(Class<?extendsFilterFactory>)
org.junit.runners.model.FrameworkMember.self()
junit.extensions.RepeatedTest.run(TestResult)
org.junit.internal.runners.TestClass.getBefores()
org.junit.runner.Result.wasSuccessful()
org.junit.experimental.theories.ParameterSignature.hasAnnotation(Class<?extendsAnnotation>)
org.junit.experimental.theories.internal.Assignments.potentialsForNextUnassigned()
junit.framework.ComparisonCompactor.compactString(String)
org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(ParameterSignature)
org.junit.internal.runners.JUnit4ClassRunner.testAnnotations(Method)
org.junit.Assert.assertTrue(boolean)
org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnParameterizedType(ParameterizedType,List<Throwable>)
org.junit.experimental.max.MaxCore.run(Class<?>)
org.junit.runner.FilterFactories.createFilterFactory(String)
org.junit.rules.ErrorCollector.checkSucceeds(Callable<T>)
junit.textui.ResultPrinter.elapsedTimeAsString(long)
org.junit.internal.ComparisonCriteria.arrayEquals(String,Object,Object)
org.junit.Assert.fail()
org.junit.runner.Request.method(Class<?>,String)
org.junit.internal.matchers.StacktracePrintingMatcher.describeTo(Description)
org.junit.internal.runners.TestMethod.isIgnored()
junit.framework.TestResult.addError(Test,Throwable)
org.junit.experimental.categories.Categories.createSet(Class<?>[])
org.junit.experimental.theories.internal.Assignments.isComplete()
org.junit.Assert.assertTrue(String,boolean)
org.junit.runners.model.TestClass.getAnnotation(Class<T>)
org.junit.experimental.results.PrintableResult.failureCount()
org.junit.Assert.formatClassAndValue(Object,String)
org.junit.runner.Request.sortWith(Comparator<Description>)
org.junit.runner.Description.getAnnotations()
org.junit.internal.runners.model.EachTestNotifier.addMultipleFailureException(MultipleFailureException)
junit.runner.BaseTestRunner.getPreferences()
junit.framework.TestCase.assertEquals(String,Object,Object)
org.junit.runners.ParentRunner.isIgnored(T)
org.junit.experimental.max.MaxCore.run(Request,JUnitCore)
org.junit.internal.runners.model.EachTestNotifier.fireTestSuiteFinished()
org.junit.runners.BlockJUnit4ClassRunner.validateMethods(List<Throwable>)
junit.framework.Assert.failSame(String)
junit.framework.TestCase.tearDown()
org.junit.experimental.max.MaxHistory.putTestDuration(Description,long)
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.classBlock(RunNotifier)
org.junit.rules.RuleChain.apply(Statement,Description)
org.junit.internal.runners.JUnit4ClassRunner.testName(Method)
org.junit.runners.parameterized.TestWithParameters.toString()
junit.framework.ComparisonCompactor.compact(String)
junit.framework.Assert.assertSame(Object,Object)
junit.framework.TestCase.assertEquals(double,double,double)
org.junit.internal.runners.model.EachTestNotifier.fireTestSuiteStarted()
org.junit.rules.ExpectedException.expect(Class<?extendsThrowable>)
org.junit.experimental.max.MaxCore.storedLocally(File)
junit.extensions.TestDecorator.basicRun(TestResult)
org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnGenericArrayType(GenericArrayType,List<Throwable>)
org.junit.internal.ArrayComparisonFailure.toString()
org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnWildcardType(WildcardType,List<Throwable>)
org.junit.internal.runners.MethodRoadie.runTestMethod()
junit.framework.Assert.fail()
junit.framework.JUnit4TestCaseFacade.toString()
org.junit.rules.ExpectedExceptionMatcherBuilder.add(Matcher<?>)
org.junit.internal.runners.JUnit4ClassRunner.getTestClass()
org.junit.internal.runners.ClassRoadie.runBefores()
org.junit.experimental.results.PrintableResult.testResult(Request)
org.junit.Assert.assertNull(Object)
org.junit.experimental.theories.internal.ParameterizedAssertionError.hashCode()
org.junit.internal.Throwables.initGetSuppressed()
org.junit.runners.model.FrameworkMethod.getDeclaringClass()
junit.textui.TestRunner.start(String[])
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.validateConstructor(List<Throwable>)
junit.framework.Assert.assertFalse(boolean)
org.junit.internal.ComparisonCriteria.isArray(Object)
org.junit.runner.Description.childlessCopy()
org.junit.internal.runners.model.EachTestNotifier.addFailure(Throwable)
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.createTestUsingConstructorInjection()
org.junit.internal.runners.TestMethod.getBefores()
org.junit.internal.runners.rules.RuleMemberValidator.isRuleType(FrameworkMember<?>)
org.junit.internal.runners.JUnit4ClassRunner.getTestMethods()
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.rules.TestWatcher.startingQuietly(Description,List<Throwable>)
org.junit.internal.ComparisonCriteria.componentTypeName(Class<?>)
org.junit.runner.JUnitCore.run(Class<?>...)
org.junit.experimental.ParallelComputer.getRunner(RunnerBuilder,Class<?>)
org.junit.internal.TextListener.testFailure(Failure)
org.junit.internal.TextListener.testStarted(Description)
org.junit.internal.runners.rules.RuleMemberValidator.validateMember(FrameworkMember<?>,List<Throwable>)
junit.runner.BaseTestRunner.readPreferences()
org.junit.runner.JUnitCommandLineParseResult.parseParameters(String[])
org.junit.experimental.results.FailureList.result()
org.junit.Assume.assumeTrue(boolean)
org.junit.experimental.theories.internal.Assignments.assignNext(PotentialAssignment)
org.junit.internal.matchers.ThrowableMessageMatcher.describeTo(Description)
org.junit.internal.management.ReflectiveThreadMXBean.getThreadCpuTime(long)
org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()
org.junit.experimental.theories.internal.ParameterizedAssertionError.stringValueOf(Object)
org.junit.Assert.assertEquals(String,double,double)
junit.framework.TestCase.toString()
org.junit.runner.Result.writeObject(ObjectOutputStream)
junit.textui.ResultPrinter.printErrors(TestResult)
junit.framework.JUnit4TestAdapter.filter(Filter)
org.junit.internal.builders.IgnoredClassRunner.getDescription()
org.junit.experimental.max.MaxCore.run(Request)
org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(Field)
org.junit.Assert.assertArrayEquals(byte[],byte[])
org.junit.Assert.assertArrayEquals(String,Object[],Object[])
org.junit.runner.Description.createTestDescription(String,String,Annotation...)
org.junit.experimental.theories.internal.AllMembersSupplier.addMultiPointFields(ParameterSignature,List<PotentialAssignment>)
org.junit.internal.matchers.ThrowableMessageMatcher.describeMismatchSafely(T,Description)
org.junit.Assert.assertFalse(boolean)
org.junit.rules.TestWatcher.starting(Description)
junit.framework.TestCase.run()
junit.framework.AssertionFailedError.defaultString(String)
org.junit.rules.ErrorCollector.checkThrows(Class<?extendsThrowable>,ThrowingRunnable)
org.junit.rules.Timeout.createFailOnTimeoutStatement(Statement)
org.junit.Assert.assertNotNull(String,Object)
org.junit.runner.JUnitCommandLineParseResult.errorReport(Throwable)
junit.framework.TestSuite.addTestSuite(Class<?extendsTestCase>)
junit.framework.TestCase.assertEquals(String,int,int)
junit.framework.Assert.assertEquals(String,float,float,float)
org.junit.Assume.assumeTrue(String,boolean)
org.junit.runner.Result.getAssumptionFailureCount()
org.junit.Assert.floatIsDifferent(float,float,float)
junit.textui.TestRunner.runSingleMethod(String,String,boolean)
junit.runner.BaseTestRunner.showStackRaw()
org.junit.internal.matchers.StacktracePrintingMatcher.describeMismatchSafely(T,Description)
junit.framework.Assert.assertTrue(boolean)
org.junit.rules.Timeout.millis(long)
org.junit.experimental.theories.internal.Assignments.nextUnassigned()
junit.framework.ComparisonCompactor.computeCommonSuffix()
org.junit.runners.model.FrameworkField.getAnnotations()
junit.runner.BaseTestRunner.getPreference(String,int)
org.junit.rules.TemporaryFolder.before()
org.junit.Assert.assertNotNull(Object)
org.junit.Assert.assertEquals(double,double,double)
org.junit.experimental.theories.Theories.validateConstructor(List<Throwable>)
org.junit.internal.runners.JUnit4ClassRunner.getName()
junit.textui.ResultPrinter.printHeader(long)
junit.framework.JUnit4TestAdapter.toString()
org.junit.Assert.assertNotEquals(String,Object,Object)
org.junit.internal.runners.TestClass.isShadowed(Method,List<Method>)
org.junit.experimental.theories.Theories.validateParameterSupplier(Class<?extendsParameterSupplier>,List<Throwable>)
org.junit.validator.PublicClassValidator.validateTestClass(TestClass)
junit.framework.TestSuite.countTestCases()
junit.framework.Assert.assertNotSame(String,Object,Object)
org.junit.internal.runners.MethodValidator.validateNoArgConstructor()
junit.textui.ResultPrinter.print(TestResult,long)
org.junit.internal.runners.ClassRoadie.runAfters()
org.junit.rules.Timeout.seconds(long)
org.junit.internal.ArrayComparisonFailure.addDimension(int)
org.junit.runners.model.TestClass.getJavaClass()
org.junit.experimental.theories.internal.AllMembersSupplier.addArrayValues(ParameterSignature,String,List<PotentialAssignment>,Object)
org.junit.experimental.theories.Theories.collectInitializationErrors(List<Throwable>)
org.junit.internal.matchers.ThrowableCauseMatcher.matchesSafely(T)
org.junit.experimental.max.MaxHistory.getTestDuration(Description)
org.junit.internal.runners.MethodValidator.validateStaticMethods()
org.junit.internal.runners.TestMethod.getTimeout()
org.junit.experimental.max.MaxCore.getMalformedTestClass(Description)
org.junit.runners.model.FrameworkField.getName()
org.junit.rules.ExpectedException.failDueToMissingException()
junit.framework.Assert.assertEquals(String,Object,Object)
org.junit.experimental.max.MaxHistory.getFailureTimestamp(Description)
org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(Runnable)
org.junit.internal.Classes.getClass(String,Class<?>)
org.junit.rules.ErrorCollector.verify()
junit.framework.Assert.assertEquals(String,int,int)
org.junit.Assume.assumeNotNull(Object...)
org.junit.rules.TestWatcher.skippedQuietly(org.junit.internal.AssumptionViolatedException,Description,List<Throwable>)
junit.framework.ComparisonCompactor.areStringsEqual()
org.apache.ibatis.session.Configuration.newResultSetHandler(Executor,MappedStatement,RowBounds,ParameterHandler,ResultHandler,BoundSql)
org.apache.ibatis.reflection.DefaultReflectorFactory.findForClass(Class<?>)
org.apache.ibatis.session.SqlSessionFactoryBuilder.build(Reader,String,Properties)
org.apache.ibatis.session.defaults.DefaultSqlSessionFactory.openSessionFromDataSource(ExecutorType,TransactionIsolationLevel,boolean)
org.apache.ibatis.reflection.Reflector.getSignature(Method)
org.apache.ibatis.session.Configuration.newExecutor(Transaction,ExecutorType)
org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(String,SqlSource,StatementType,SqlCommandType,Integer,Integer,String,Class<?>,String,Class<?>,ResultSetType,boolean,boolean,boolean,KeyGenerator,String,String,String,LanguageDriver,String)
org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode()
org.apache.ibatis.reflection.Reflector.addGetMethod(String,Method)
org.apache.ibatis.parsing.XPathParser.evalNode(Object,String)
org.apache.ibatis.type.TypeHandlerRegistry.getJdbcHandlerMap(Type)
org.apache.ibatis.builder.xml.XMLConfigBuilder.mapperElement(XNode)
org.apache.ibatis.type.TypeHandlerRegistry.getTypeHandler(Type,JdbcType)
org.apache.ibatis.reflection.Reflector.addUniqueMethods(Map<String,Method>,Method[])
org.apache.ibatis.builder.SqlSourceBuilder.parse(String,Class<?>,Map<String,Object>)
org.apache.ibatis.reflection.Reflector.canAccessPrivateMethods()
org.apache.ibatis.executor.loader.javassist.JavassistProxyFactory.crateProxy(Class<?>,MethodHandler,List<Class<?>>,List<Object>)
org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory.newTransaction(DataSource,TransactionIsolationLevel,boolean)
org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(List<XNode>,String)
org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(Method)
org.apache.ibatis.parsing.XNode.parseAttributes(Node)
org.apache.ibatis.jdbc.ScriptRunner.handleLine(StringBuilder,String)
org.apache.ibatis.io.ClassLoaderWrapper.getClassLoaders(ClassLoader)
org.apache.ibatis.scripting.xmltags.XMLScriptBuilder.initNodeHandlerMap()
org.apache.ibatis.reflection.TypeParameterResolver.resolveType(Type,Type,Class<?>)
org.apache.ibatis.parsing.PropertyParser.parse(String,Properties)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getFirstResultSet(Statement)
org.apache.ibatis.parsing.XNode.getBodyData(Node)
org.apache.ibatis.builder.MapperBuilderAssistant.buildResultMapping(Class<?>,String,String,Class<?>,JdbcType,String,String,String,String,Class<?extendsTypeHandler<?>>,List<ResultFlag>,String,String,boolean)
org.apache.ibatis.scripting.xmltags.XMLScriptBuilder.parseDynamicTags(XNode)
org.apache.ibatis.parsing.GenericTokenParser.parse(String)
org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(Object)
org.apache.ibatis.executor.loader.cglib.CglibProxyFactory.crateProxy(Class<?>,Callback,List<Class<?>>,List<Object>)
org.apache.ibatis.reflection.Reflector.addGetMethods(Class<?>)
org.apache.ibatis.session.SqlSessionFactoryBuilder.build(Configuration)
org.apache.ibatis.builder.xml.XMLConfigBuilder.settingsElement(Properties)
org.apache.ibatis.reflection.Reflector.resolveGetterConflicts(Map<String,List<Method>>)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.loadXmlResource()
org.apache.ibatis.session.Configuration.newStatementHandler(Executor,MappedStatement,Object,RowBounds,ResultHandler,BoundSql)
org.apache.ibatis.cache.CacheKey.update(Object)
org.apache.ibatis.executor.BaseExecutor.createCacheKey(MappedStatement,Object,RowBounds,BoundSql)
org.apache.ibatis.builder.MapperBuilderAssistant.getStatementResultMaps(String,Class<?>,String)
org.apache.ibatis.reflection.property.PropertyNamer.methodToProperty(String)
org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XNode)
org.apache.ibatis.builder.MapperBuilderAssistant.addResultMap(String,Class<?>,String,Discriminator,List<ResultMapping>,Boolean)
org.apache.ibatis.reflection.Reflector.addFields(Class<?>)
org.apache.ibatis.reflection.Reflector.typeToClass(Type)
org.apache.ibatis.builder.MapperBuilderAssistant.applyCurrentNamespace(String,boolean)
org.apache.ibatis.session.Configuration.checkGloballyForDiscriminatedNestedResultMaps(ResultMap)
org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XNode,List<ResultMapping>)
org.apache.ibatis.parsing.XNode.getStringAttribute(String,String)
org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createParameterHandler(MappedStatement,Object,BoundSql)
org.apache.ibatis.builder.MapperBuilderAssistant.useNewCache(Class<?extendsCache>,Class<?extendsCache>,Long,Integer,boolean,boolean,Properties)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(ResultSetWrapper,ResultMap)
org.apache.ibatis.parsing.XPathParser.createDocument(InputSource)
org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(MappedStatement,Object,RowBounds,ResultHandler,CacheKey,BoundSql)
org.apache.ibatis.builder.xml.XMLIncludeTransformer.applyIncludes(Node,Properties,boolean)
org.apache.ibatis.reflection.Reflector.isValidPropertyName(String)
org.apache.ibatis.builder.xml.XMLConfigBuilder.environmentsElement(XNode)
org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(Configuration,XNode,Class<?>)
org.apache.ibatis.jdbc.ScriptRunner.lineIsComment(String)
org.apache.ibatis.parsing.XNode.parseBody(Node)
org.apache.ibatis.cache.decorators.SoftCache.putObject(Object,Object)
org.apache.ibatis.jdbc.ScriptRunner.executeLineByLine(Reader)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createAutomaticMappings(ResultSetWrapper,ResultMap,MetaObject,String)
org.apache.ibatis.logging.LogFactory.getLog(String)
org.apache.ibatis.scripting.xmltags.XMLScriptBuilder.parseScriptNode()
org.apache.ibatis.parsing.XNode.getStringAttribute(String)
org.apache.ibatis.type.TypeAliasRegistry.registerAlias(String,Class<?>)
org.apache.ibatis.reflection.TypeParameterResolver.resolveWildcardType(WildcardType,Type,Class<?>)
org.apache.ibatis.parsing.XNode.getValueBasedIdentifier()
org.apache.ibatis.reflection.Reflector.getClassMethods(Class<?>)
org.apache.ibatis.scripting.defaults.RawSqlSource.getSql(Configuration,SqlNode)
org.apache.ibatis.reflection.TypeParameterResolver.resolveParameterizedType(ParameterizedType,Type,Class<?>)
org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XNode)
org.apache.ibatis.reflection.Reflector.addSetMethods(Class<?>)
org.apache.ibatis.binding.MapperProxyFactory.newInstance(SqlSession)
org.apache.ibatis.reflection.factory.DefaultObjectFactory.instantiateClass(Class<T>,List<Class<?>>,List<Object>)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(Method)
org.apache.ibatis.executor.BaseExecutor.query(MappedStatement,Object,RowBounds,ResultHandler,CacheKey,BoundSql)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(ResultSetWrapper,ResultMap,List<Object>,ResultMapping)
org.apache.ibatis.parsing.XPathParser.evalNodes(Object,String)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getReturnType(Method)
org.apache.ibatis.scripting.xmltags.TextSqlNode.isDynamic()
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(Statement)
org.apache.ibatis.parsing.XNode.getName()
org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(String,Object)
org.apache.ibatis.mapping.MappedStatement.getBoundSql(Object)
org.apache.ibatis.jdbc.ScriptRunner.executeStatement(String)
org.apache.ibatis.datasource.unpooled.UnpooledDataSource.initializeDriver()
org.apache.ibatis.builder.xml.XMLConfigBuilder.settingsAsProperties(XNode)
org.apache.ibatis.parsing.XNode.getParent()
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(ResultSetWrapper,ResultMap,ResultHandler<?>,RowBounds,ResultMapping)
org.apache.ibatis.binding.MapperMethod.execute(SqlSession,Object[])
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse()
org.apache.ibatis.parsing.XNode.getChildren()
org.apache.ibatis.builder.xml.XMLMapperBuilder.buildResultMappingFromContext(XNode,Class<?>,List<ResultFlag>)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(Method,Class<?>,LanguageDriver)
org.apache.ibatis.reflection.factory.DefaultObjectFactory.resolveInterface(Class<?>)
org.apache.ibatis.reflection.Reflector.resolveSetterConflicts(Map<String,List<Method>>)
org.apache.ibatis.reflection.wrapper.BeanWrapper.hasSetter(String)
org.apache.ibatis.reflection.Reflector.addMethodConflict(Map<String,List<Method>>,String,Method)
org.apache.ibatis.session.Configuration.newMetaObject(Object)
org.apache.ibatis.session.Configuration.isLazyLoadingEnabled()
org.apache.ibatis.reflection.Reflector.addGetField(Field)
org.apache.ibatis.parsing.XPathParser.commonConstructor(boolean,Properties,EntityResolver)
org.apache.ibatis.reflection.MetaClass.hasSetter(String)
org.apache.ibatis.datasource.unpooled.UnpooledDataSourceFactory.setProperties(Properties)
org.apache.ibatis.builder.xml.XMLMapperEntityResolver.resolveEntity(String,String)
org.apache.ibatis.reflection.Reflector.addDefaultConstructor(Class<?>)
org.apache.ibatis.builder.StaticSqlSource.getBoundSql(Object)
org.apache.ibatis.reflection.Reflector.addSetField(Field)
org.apache.ibatis.mapping.ResultMapping.getFlags()
org.apache.ibatis.builder.xml.XMLMapperEntityResolver.getInputSource(String,String,String)
org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(String)
org.apache.ibatis.reflection.MetaObject.forObject(Object,ObjectFactory,ObjectWrapperFactory,ReflectorFactory)
org.apache.ibatis.executor.SimpleExecutor.doQuery(MappedStatement,Object,RowBounds,ResultHandler,BoundSql)
org.apache.ibatis.builder.MapperBuilderAssistant.parseCompositeColumnName(String)
org.apache.ibatis.reflection.TypeParameterResolver.resolveParamTypes(Method,Type)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.shouldProcessMoreRows(ResultContext<?>,RowBounds)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseCache()
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createResultObject(ResultSetWrapper,ResultMap,List<Class<?>>,List<Object>,String)
org.apache.ibatis.session.Configuration.checkLocallyForDiscriminatedNestedResultMaps(ResultMap)
org.apache.ibatis.scripting.xmltags.DynamicContext.appendSql(String)
org.apache.ibatis.parsing.XNode.getNode()
org.apache.ibatis.reflection.wrapper.MapWrapper.hasGetter(String)
org.apache.ibatis.parsing.XNode.getIntAttribute(String,Integer)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(ResultSetWrapper,ResultMap,MetaObject,ResultLoaderMap,String)
org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(PropertyTokenizer,Object,Object)
org.apache.ibatis.executor.SimpleExecutor.prepareStatement(StatementHandler,Log)
org.apache.ibatis.reflection.TypeParameterResolver.resolveGenericArrayType(GenericArrayType,Type,Class<?>)
org.apache.ibatis.jdbc.ScriptRunner.commandReadyToExecute(String)
org.apache.ibatis.executor.resultset.ResultSetWrapper.loadMappedAndUnmappedColumnNames(ResultMap,String)
org.apache.ibatis.mapping.BoundSql.hasAdditionalParameter(String)
org.apache.ibatis.builder.xml.XMLMapperBuilder.parameterMapElement(List<XNode>)
org.apache.ibatis.cache.decorators.LruCache.setSize(int)
org.apache.ibatis.scripting.LanguageDriverRegistry.register(Class<?>)
org.apache.ibatis.type.TypeHandlerRegistry.register(Type,TypeHandler<?extendsT>)
org.apache.ibatis.mapping.ResultMap.hasNestedResultMaps()
org.apache.ibatis.cache.decorators.TransactionalCache.flushPendingEntries()
org.apache.ibatis.parsing.XNode.getBooleanAttribute(String,Boolean)
org.apache.ibatis.builder.xml.XMLStatementBuilder.parseSelectKeyNode(String,XNode,Class<?>,LanguageDriver,String)
org.apache.ibatis.reflection.TypeParameterResolver.resolveReturnType(Method,Type)
org.apache.ibatis.session.Configuration.addLoadedResource(String)
org.apache.ibatis.builder.MapperBuilderAssistant.buildDiscriminator(Class<?>,String,Class<?>,JdbcType,Class<?extendsTypeHandler<?>>,Map<String,String>)
org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(List<XNode>)
org.apache.ibatis.session.Configuration.isResourceLoaded(String)
org.apache.ibatis.type.TypeHandlerRegistry.register(JdbcType,TypeHandler<?>)
org.apache.ibatis.executor.resultset.ResultSetWrapper.getMapKey(ResultMap,String)
org.apache.ibatis.logging.LogFactory.tryImplementation(Runnable)
org.apache.ibatis.builder.ParameterExpression.skipWS(String,int)
org.apache.ibatis.cache.decorators.WeakCache.putObject(Object,Object)
org.apache.ibatis.mapping.ResultMap.getDiscriminator()
org.apache.ibatis.datasource.unpooled.UnpooledDataSourceFactory.convertValue(MetaObject,String,String)
org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(Configuration,String,Class<?>)
org.apache.ibatis.reflection.MetaObject.setValue(String,Object)
org.apache.ibatis.builder.xml.XMLMapperBuilder.sqlElement(List<XNode>,String)
org.apache.ibatis.scripting.xmltags.TextSqlNode.createParser(TokenHandler)
org.apache.ibatis.executor.loader.ResultLoaderMap.addLoader(String,MetaObject,ResultLoader)
org.apache.ibatis.plugin.Plugin.getAllInterfaces(Class<?>,Map<Class<?>,Set<Method>>)
org.apache.ibatis.reflection.property.PropertyTokenizer.getName()
org.apache.ibatis.executor.statement.BaseStatementHandler.setStatementTimeout(Statement,Integer)
org.apache.ibatis.reflection.Reflector.addSetMethod(String,Method)
org.apache.ibatis.reflection.ParamNameResolver.getActualParamName(Method,int)
org.apache.ibatis.builder.MapperBuilderAssistant.resolveResultJavaType(Class<?>,String,Class<?>)
org.apache.ibatis.builder.ParameterExpression.property(String,int)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseResultMap(Method)
org.apache.ibatis.jdbc.SqlBuilder.RESET()
org.apache.ibatis.executor.CachingExecutor.query(MappedStatement,Object,RowBounds,ResultHandler)
org.apache.ibatis.type.TypeHandlerRegistry.hasTypeHandler(Class<?>,JdbcType)
org.apache.ibatis.reflection.ArrayUtil.hashCode(Object)
org.apache.ibatis.builder.BaseBuilder.resolveClass(String)
org.apache.ibatis.cache.decorators.SerializedCache.deserialize(byte[])
org.apache.ibatis.parsing.XPathParser.evaluate(String,Object,QName)
org.apache.ibatis.builder.xml.XMLMapperBuilder.bindMapperForNamespace()
org.apache.ibatis.session.Configuration.getTypeHandlerRegistry()
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getParameterType(Method)
org.apache.ibatis.cache.TransactionalCacheManager.commit()
org.apache.ibatis.builder.xml.XMLMapperBuilder.processNestedResultMappings(XNode,List<ResultMapping>)
org.apache.ibatis.parsing.XNode.newXNode(Node)
org.apache.ibatis.transaction.jdbc.JdbcTransaction.close()
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNestedQueryMappingValue(ResultSet,MetaObject,ResultMapping,ResultLoaderMap,String)
org.apache.ibatis.scripting.xmltags.TextSqlNode.apply(DynamicContext)
org.apache.ibatis.io.ClassLoaderWrapper.classForName(String,ClassLoader[])
org.apache.ibatis.io.Resources.getResourceAsStream(ClassLoader,String)
org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(DynamicContext)
org.apache.ibatis.reflection.TypeParameterResolver.resolveTypeVar(TypeVariable<?>,Type,Class<?>)
org.apache.ibatis.session.Configuration.getSqlFragments()
org.apache.ibatis.executor.loader.javassist.JavassistProxyFactory.createProxy(Object,ResultLoaderMap,Configuration,ObjectFactory,List<Class<?>>,List<Object>)
org.apache.ibatis.mapping.CacheBuilder.setStandardDecorators(Cache)
org.apache.ibatis.builder.MapperBuilderAssistant.buildParameterMapping(Class<?>,String,Class<?>,JdbcType,String,ParameterMode,Class<?extendsTypeHandler<?>>,Integer)
org.apache.ibatis.parsing.XNode.getChildrenAsProperties()
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getLanguageDriver(Method)
org.apache.ibatis.session.Configuration.addResultMap(ResultMap)
org.apache.ibatis.cache.impl.PerpetualCache.getObject(Object)
org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(PreparedStatement)
org.apache.ibatis.builder.ParameterExpression.skipUntil(String,int,String)
org.apache.ibatis.builder.xml.XMLIncludeTransformer.getStringAttribute(Node,String)
org.apache.ibatis.jdbc.ScriptRunner.runScript(Reader)
org.apache.ibatis.binding.MapperProxyFactory.newInstance(MapperProxy<T>)
org.apache.ibatis.jdbc.ScriptRunner.commitConnection()
org.apache.ibatis.executor.BaseExecutor.getConnection(Log)
org.apache.ibatis.type.TypeHandlerRegistry.register(Type,JdbcType,TypeHandler<?>)
org.apache.ibatis.reflection.TypeParameterResolver.resolveFieldType(Field,Type)
org.apache.ibatis.builder.xml.XMLMapperBuilder.parse()
org.apache.ibatis.scripting.LanguageDriverRegistry.setDefaultDriverClass(Class<?>)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.applyResultMap(String,Class<?>,Arg[],Result[],TypeDiscriminator)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.shouldApplyAutomaticMappings(ResultMap,boolean)
org.apache.ibatis.session.defaults.DefaultSqlSession.close()
org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(Connection)
org.apache.ibatis.builder.MapperBuilderAssistant.parseMultipleColumnNames(String)
org.apache.ibatis.cache.decorators.SoftCache.getObject(Object)
org.apache.ibatis.mapping.VendorDatabaseIdProvider.getDatabaseProductName(DataSource)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlCommandType(Method)
org.apache.ibatis.executor.resultset.ResultSetWrapper.getColumnNames()
org.apache.ibatis.reflection.factory.DefaultObjectFactory.create(Class<T>,List<Class<?>>,List<Object>)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.generateResultMapName(Method)
org.apache.ibatis.logging.LogFactory.useSlf4jLogging()
org.apache.ibatis.scripting.xmltags.ForEachSqlNode.itemizeItem(String,int)
org.apache.ibatis.plugin.InterceptorChain.pluginAll(Object)
org.apache.ibatis.session.Configuration.hasStatement(String)
org.apache.ibatis.reflection.Reflector.getGetInvoker(String)
org.apache.ibatis.reflection.MetaObject.getSetterType(String)
org.apache.ibatis.executor.loader.ResultLoader.loadResult()
org.apache.ibatis.cache.impl.PerpetualCache.putObject(Object,Object)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.prependPrefix(String,String)
org.apache.ibatis.mapping.ResultMap.getAutoMapping()
org.apache.ibatis.builder.xml.XMLIncludeTransformer.getVariablesContext(Node,Properties)
org.apache.ibatis.reflection.MetaObject.findProperty(String,boolean)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parsePendingMethods()
org.apache.ibatis.scripting.defaults.RawSqlSource.getBoundSql(Object)
org.apache.ibatis.builder.xml.XMLIncludeTransformer.findSqlFragment(String,Properties)
org.apache.ibatis.executor.statement.PreparedStatementHandler.update(Statement)
org.apache.ibatis.cache.decorators.SoftCache.removeGarbageCollectedItems()
org.apache.ibatis.reflection.MetaClass.getSetterType(String)
org.apache.ibatis.type.StringTypeHandler.getNullableResult(ResultSet,String)
org.apache.ibatis.jdbc.ScriptRunner.setLogWriter(PrintWriter)
org.apache.ibatis.binding.MapperMethod.rowCountResult(int)
org.apache.ibatis.type.BaseTypeHandler.getResult(ResultSet,String)
org.apache.ibatis.scripting.LanguageDriverRegistry.getDefaultDriver()
org.apache.ibatis.cache.TransactionalCacheManager.getTransactionalCache(Cache)
org.apache.ibatis.logging.LogFactory.getLog(Class<?>)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.putAncestor(Object,String)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.skipRows(ResultSet,RowBounds)
org.apache.ibatis.cache.decorators.WeakCache.removeGarbageCollectedItems()
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.validateResultMapsCount(ResultSetWrapper,int)
org.apache.ibatis.jdbc.ScriptRunner.setAutoCommit()
org.apache.ibatis.reflection.wrapper.BeanWrapper.findProperty(String,boolean)
org.apache.ibatis.executor.resultset.ResultSetWrapper.getUnmappedColumnNames(ResultMap,String)
org.apache.ibatis.scripting.LanguageDriverRegistry.getDriver(Class<?>)
org.apache.ibatis.session.Configuration.setReturnInstanceForEmptyRow(boolean)
org.apache.ibatis.executor.ErrorContext.reset()
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.hasNestedSelect(Result)
org.apache.ibatis.binding.MapperRegistry.getMapper(Class<T>,SqlSession)
org.apache.ibatis.builder.BaseBuilder.resolveTypeHandler(Class<?>,Class<?extendsTypeHandler<?>>)
org.apache.ibatis.session.Configuration.isCallSettersOnNulls()
org.apache.ibatis.logging.slf4j.Slf4jImpl.isDebugEnabled()
org.apache.ibatis.cache.decorators.TransactionalCache.putObject(Object,Object)
org.apache.ibatis.builder.BaseBuilder.resolveAlias(String)
org.apache.ibatis.reflection.wrapper.BeanWrapper.set(PropertyTokenizer,Object)
org.apache.ibatis.cache.CacheKey.hashCode()
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.applyResults(Result[],Class<?>,List<ResultMapping>)
org.apache.ibatis.session.defaults.DefaultSqlSession.getConnection()
org.apache.ibatis.executor.loader.AbstractEnhancedDeserializationProxy.invoke(Object,Method,Object[])
org.apache.ibatis.session.Configuration.getTypeAliasRegistry()
org.apache.ibatis.builder.xml.XMLIncludeTransformer.applyIncludes(Node)
org.apache.ibatis.cache.decorators.WeakCache.getObject(Object)
org.apache.ibatis.builder.xml.XMLConfigBuilder.transactionManagerElement(XNode)
org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(boolean)
org.apache.ibatis.executor.BaseExecutor.close(boolean)
org.apache.ibatis.jdbc.ScriptRunner.rollbackConnection()
org.apache.ibatis.executor.CachingExecutor.getTransaction()
org.apache.ibatis.io.DefaultVFS.list(URL,String)
org.apache.ibatis.type.UnknownTypeHandler.resolveTypeHandler(ResultSet,String)
org.apache.ibatis.session.Configuration.getDefaultScriptingLanguageInstance()
org.apache.ibatis.mapping.ResultMapping.getProperty()
org.apache.ibatis.cache.impl.PerpetualCache.removeObject(Object)
org.apache.ibatis.reflection.wrapper.DefaultObjectWrapperFactory.hasWrapperFor(Object)
org.apache.ibatis.scripting.xmltags.DynamicContext.getSql()
org.apache.ibatis.builder.MapperBuilderAssistant.setCurrentNamespace(String)
org.apache.ibatis.mapping.MappedStatement.getStatementLog()
org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(String,Object,RowBounds)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.chooseAnnotationType(Method,Set<Class<?extendsAnnotation>>)
org.apache.ibatis.builder.MapperBuilderAssistant.resolveParameterJavaType(Class<?>,String,Class<?>,JdbcType)
org.apache.ibatis.builder.xml.XMLStatementBuilder.databaseIdMatchesCurrent(String,String,String)
org.apache.ibatis.session.Configuration.getLanguageRegistry()
org.apache.ibatis.builder.xml.XMLConfigBuilder.typeAliasesElement(XNode)
org.apache.ibatis.io.Resources.getResourceAsReader(String)
org.apache.ibatis.binding.MapperProxy.invoke(Object,Method,Object[])
org.apache.ibatis.datasource.unpooled.UnpooledDataSource.configureConnection(Connection)
org.apache.ibatis.cache.decorators.LruCache.putObject(Object,Object)
org.apache.ibatis.builder.ParameterExpression.parse(String)
org.apache.ibatis.binding.MapperMethod.executeForMany(SqlSession,Object[])
org.apache.ibatis.mapping.MappedStatement.delimitedStringToArray(String)
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(String[],Class<?>,LanguageDriver)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getDiscriminatorValue(ResultSet,Discriminator,String)
org.apache.ibatis.builder.BaseBuilder.resolveResultSetType(String)
org.apache.ibatis.builder.MapperBuilderAssistant.getLanguageDriver(Class<?>)
org.apache.ibatis.type.TypeHandlerRegistry.register(Class<?>,Class<?>)
org.apache.ibatis.type.TypeHandlerRegistry.getJdbcHandlerMapForEnumInterfaces(Class<?>,Class<?>)
org.apache.ibatis.reflection.MetaClass.buildProperty(String,StringBuilder)
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createResultObject(ResultSetWrapper,ResultMap,ResultLoaderMap,String)
org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(String,Object)
org.apache.ibatis.type.TypeHandlerRegistry.register(Class<T>,JdbcType,TypeHandler<?extendsT>)
org.apache.ibatis.executor.loader.ResultLoaderMap.size()
org.apache.ibatis.jdbc.ScriptRunner.printResults(Statement,boolean)
org.apache.ibatis.logging.LogFactory.setImplementation(Class<?extendsLog>)
org.apache.ibatis.session.Configuration.addMapper(Class<T>)
org.apache.ibatis.mapping.ResultMapping.getResultSet()
org.apache.ibatis.session.SqlSessionFactoryBuilder.build(Reader)
org.apache.ibatis.io.Resources.getResourceAsStream(String)
org.apache.ibatis.type.TypeHandlerRegistry.register(Class<T>,TypeHandler<?extendsT>)
org.apache.ibatis.session.Configuration.getResultMap(String)
org.apache.ibatis.executor.ResultExtractor.extractObjectFromList(List<Object>,Class<?>)
org.apache.ibatis.reflection.MetaClass.hasDefaultConstructor()
org.apache.ibatis.reflection.wrapper.MapWrapper.getSetterType(String)
org.apache.ibatis.cache.decorators.LruCache.getId()
org.apache.ibatis.session.Configuration.addInterceptor(Interceptor)
org.apache.ibatis.executor.statement.PreparedStatementHandler.query(Statement,ResultHandler)
org.apache.ibatis.session.Configuration.buildAllStatements()
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.hasTypeHandlerForResultObject(ResultSetWrapper,Class<?>)
org.apache.ibatis.executor.ErrorContext.resource(String)
org.apache.ibatis.builder.xml.XMLStatementBuilder.processSelectKeyNodes(String,Class<?>,LanguageDriver)
opennlp.tools.ml.maxent.GISModel.eval(int[],double[],EvalParameters)
opennlp.tools.ml.perceptron.PerceptronTrainer.findParameters(int,boolean)
opennlp.tools.ngram.NGramModel.add(StringList)
opennlp.tools.ml.model.TwoPassDataIndexer.index(int,ObjectStream<Event>,Map<String,Integer>)
opennlp.tools.ml.model.TwoPassDataIndexer.computeEventCounts(ObjectStream<Event>,Writer,Map<String,Integer>,int)
opennlp.tools.ml.maxent.GISTrainer.nextIteration(double,CompletionService<ModelExpactationComputeTask>)
opennlp.tools.util.Span.spansToStrings(Span[],CharSequence)
opennlp.tools.ml.maxent.GISModel.eval(int[],float[],double[],EvalParameters)
opennlp.tools.ml.model.Event.toString()
opennlp.tools.ml.maxent.GISTrainer.trainModel(int,DataIndexer,Prior,int,int)
opennlp.tools.ml.model.FileEventStream.read()
opennlp.tools.ml.model.FileEventStream.toLine(Event)
opennlp.tools.ml.model.AbstractDataIndexer.update(String[],Set<String>,Map<String,Integer>,int)
opennlp.tools.ml.model.AbstractDataIndexer.sortAndMerge(List<ComparableEvent>,boolean)
opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(EvalParameters)
opennlp.tools.ngram.NGramModel.setCount(StringList,int)
opennlp.tools.ml.model.AbstractDataIndexer.toIndexedStringArray(Map<String,Integer>)
opennlp.tools.ml.model.ComparableEvent.compareTo(ComparableEvent)
opennlp.tools.tokenize.WhitespaceTokenizer.tokenizePos(String)
opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int,Object[],String[])
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[])
opennlp.tools.ml.perceptron.PerceptronModel.eval(int[],float[],double[],EvalParameters,boolean)
opennlp.tools.ml.maxent.quasinewton.QNMinimizer.minimize(Function)
opennlp.tools.ml.BeamSearch.bestSequences(int,T[],Object[],double,BeamSearchContextGenerator<T>,SequenceValidator<T>)
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[])
opennlp.tools.ml.model.HashSumEventStream.read()
opennlp.tools.ml.model.UniformPrior.logPrior(double[],int[],float[])
opennlp.tools.ml.maxent.quasinewton.QNMinimizer.computeDirection(double[])
opennlp.tools.ml.maxent.quasinewton.QNMinimizer.computePseudoGrad(double[],double[],double[])
opennlp.tools.ml.naivebayes.NaiveBayesModel.eval(int[],float[],double[],EvalParameters,boolean)
opennlp.tools.util.AbstractObjectStream.read()
opennlp.tools.ngram.NGramModel.add(StringList,int,int)
opennlp.tools.ml.naivebayes.LogProbabilities.normalize()
opennlp.tools.namefind.NameFinderEventStream.generateEvents(String[],String[],NameContextGenerator)
opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters()
opennlp.tools.parser.PosSampleStream.read()
opennlp.tools.ml.perceptron.PerceptronTrainer.trainingStats(EvalParameters)
opennlp.tools.ml.maxent.quasinewton.ArrayMath.logSumOfExps(double[])
opennlp.tools.tokenize.TokenSample.parse(String,String)
opennlp.tools.ml.maxent.GISModel.eval(String[],float[],double[])
opennlp.tools.postag.POSSample.getSentence()
opennlp.tools.ml.maxent.quasinewton.ArrayMath.maxIdx(double[])
opennlp.tools.ml.maxent.quasinewton.LineSearch.doConstrainedLineSearch(Function,double[],LineSearchResult,double,double)
opennlp.tools.ml.maxent.quasinewton.ArrayMath.innerProduct(double[],double[])
opennlp.tools.formats.ad.ADNameSampleStream.processLeaf(Leaf,List<String>,List<Span>)
opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int,DataIndexer)
opennlp.tools.util.featuregen.FastTokenClassFeatureGenerator.tokenFeature(String)
opennlp.tools.util.StringList.toString()
opennlp.tools.parser.chunking.BuildContextGenerator.getContext(Parse[],int)
opennlp.tools.util.StringUtil.isWhitespace(char)
opennlp.tools.parser.AbstractBottomUpParser.buildDictionary(ObjectStream<Parse>,HeadRules,TrainingParameters)
opennlp.tools.dictionary.Dictionary.put(StringList)
opennlp.tools.tokenize.DefaultTokenContextGenerator.getContext(String,int)
opennlp.tools.tokenize.DefaultTokenContextGenerator.addCharPreds(String,char,List<String>)
opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(List<String>,String[],int,String[])
opennlp.tools.ml.naivebayes.NaiveBayesModel.eval(String[])
opennlp.tools.util.AbstractEventStream.read()
opennlp.tools.parser.Parse.getType(String)
opennlp.tools.ml.maxent.quasinewton.ArrayMath.l1norm(double[])
opennlp.tools.parser.Parse.getTagNodes()
opennlp.tools.tokenize.TokSpanEventStream.createEvents(TokenSample)
opennlp.tools.ml.perceptron.PerceptronTrainer.maxIndex(double[])
opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(List<String>,String[],int,String[])
opennlp.tools.ml.model.Event.getContext()
opennlp.tools.util.featuregen.AggregatedFeatureGenerator.updateAdaptiveData(String[],String[])
opennlp.tools.parser.Parse.insert(Parse)
opennlp.tools.tokenize.TokenizerME.train(ObjectStream<TokenSample>,TokenizerFactory,TrainingParameters)
opennlp.tools.ml.TrainerFactory.getEventTrainer(Map<String,String>,Map<String,String>)
opennlp.tools.ml.model.MutableContext.setParameter(int,double)
opennlp.tools.doccat.DocumentSample.getText()
opennlp.tools.ml.perceptron.PerceptronModel.eval(String[],float[],double[])
opennlp.tools.ml.model.AbstractModel.init(String[],String[])
opennlp.tools.util.Span.getStart()
opennlp.tools.tokenize.DefaultTokenContextGenerator.createContext(String,int)
opennlp.tools.parser.ChunkSampleStream.read()
opennlp.tools.ml.model.HashSumEventStream.calculateHashSum()
opennlp.tools.ml.maxent.io.BinaryGISModelWriter.writeDouble(double)
opennlp.tools.parser.ChunkContextGenerator.getContext(int,String[],String[],String[])
opennlp.tools.ml.maxent.io.BinaryGISModelWriter.writeUTF(String)
opennlp.tools.ml.model.ComparablePredicate.compareTo(ComparablePredicate)
opennlp.tools.chunker.DefaultChunkerSequenceValidator.validOutcome(String,String)
opennlp.tools.postag.POSTaggerME.train(String,ObjectStream<POSSample>,TrainingParameters,POSTaggerFactory)
opennlp.tools.ml.perceptron.PerceptronTrainer.displayIteration(int)
opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int,String[],String[],String)
opennlp.tools.ml.maxent.quasinewton.QNModel.eval(int[],float[],double[],int,int,double[])
opennlp.tools.parser.lang.en.HeadRules.getHead(Parse[],String)
opennlp.tools.ml.model.AbstractModelReader.getParameters(int[][])
opennlp.tools.ml.model.EvalParameters.getNumOutcomes()
opennlp.tools.ml.maxent.io.GISModelWriter.persist()
opennlp.tools.util.featuregen.TokenClassFeatureGenerator.createFeatures(List<String>,String[],int,String[])
opennlp.tools.ml.maxent.quasinewton.ArrayMath.l2norm(double[])
opennlp.tools.parser.AbstractContextGenerator.cons2(List<String>,Cons,Cons,Collection<Parse>,boolean)
opennlp.tools.ml.maxent.GISTrainer.display(String)
opennlp.tools.namefind.TokenNameFinderFactory.createFeatureGenerators()
opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(ObjectStream<Event>)
opennlp.tools.ml.maxent.GISModel.eval(String[],double[])
opennlp.tools.formats.ad.ADNameSampleStream.read()
opennlp.tools.ml.maxent.GIS.trainModel(int,DataIndexer,boolean,boolean,Prior,int,int)
opennlp.tools.tokenize.TokenSample.addToken(StringBuilder,List<Span>,String,boolean)
opennlp.tools.parser.Parse.getChildren()
opennlp.tools.parser.Parse.parseParse(String,GapLabeler)
opennlp.tools.ml.naivebayes.NaiveBayesModel.initOutcomeTotals(String[],Context[])
opennlp.tools.util.StringUtil.toLowerCase(CharSequence)
opennlp.tools.parser.AbstractContextGenerator.cons3(List<String>,Cons,Cons,Cons,Collection<Parse>,Collection<Parse>,boolean,boolean,boolean)
opennlp.tools.ml.perceptron.PerceptronModelWriter.sortValues()
opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int,String[],String[],Object[])
opennlp.tools.namefind.BioCodec.encode(Span[],int)
opennlp.tools.parser.Parse.addPreviousPunctuation(Parse)
opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(Element,FeatureGeneratorResourceProvider)
opennlp.tools.parser.ChunkContextGenerator.chunkandpostagbo(int,String,String)
opennlp.tools.ml.model.AbstractModelReader.getOutcomePatterns()
opennlp.tools.formats.ad.ADChunkSampleStream.isIncludePunctuations()
opennlp.tools.ngram.NGramModel.getCount(StringList)
opennlp.tools.ml.model.MutableContext.updateParameter(int,double)
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.read()
opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(StringList)
opennlp.tools.ml.model.Context.getOutcomes()
opennlp.tools.namefind.NameSample.getSentence()
opennlp.tools.util.Version.parse(String)
opennlp.tools.sentdetect.SDEventStream.createEvents(SentenceSample)
opennlp.tools.namefind.NameSampleDataStream.read()
opennlp.tools.ml.model.EvalParameters.getConstantInverse()
opennlp.tools.parser.treeinsert.ParserEventStream.getNonAdjoinedParent(Parse)
opennlp.tools.namefind.NameFinderME.setProbs(Span[])
opennlp.tools.ml.maxent.quasinewton.QNModel.eval(String[],double[])
opennlp.tools.ngram.NGramUtils.getNMinusOneTokenFirst(StringList)
opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(String)
opennlp.tools.ml.model.Event.getOutcome()
opennlp.tools.util.StringList.hashCode()
opennlp.tools.formats.ad.ADSentenceSampleStream.read()
opennlp.tools.postag.POSSampleEventStream.generateEvents(String[],String[],Object[],POSContextGenerator)
opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(StringList)
opennlp.tools.parser.AbstractBottomUpParser.lastChild(Parse,Parse,Set<String>)
opennlp.tools.ml.maxent.quasinewton.QNMinimizer.isConverged(LineSearchResult)
opennlp.tools.util.featuregen.StringPattern.digits()
opennlp.tools.ml.model.AbstractModel.getOutcome(int)
opennlp.tools.parser.treeinsert.AttachContextGenerator.getContext(Parse[],int,List<Parse>,int)
opennlp.tools.ml.maxent.quasinewton.QNModel.getPredIndex(String)
opennlp.tools.util.Version.toString()
opennlp.tools.util.Span.getEnd()
opennlp.tools.ml.maxent.io.GISModelWriter.compressOutcomes(ComparablePredicate[])
opennlp.tools.ml.maxent.quasinewton.ArrayMath.toDoubleArray(List<Double>)
opennlp.tools.sentdetect.DefaultSDContextGenerator.getContext(CharSequence,int)
opennlp.tools.util.StringList.size()
opennlp.tools.parser.Parse.adjoin(Parse,HeadRules)
opennlp.tools.lemmatizer.LemmaSample.getTags()
opennlp.tools.ml.maxent.io.GISModelWriter.sortValues()
opennlp.tools.parser.treeinsert.ParserEventStream.addParseEvents(List<Event>,Parse[])
opennlp.tools.ml.maxent.quasinewton.ArrayMath.toIntArray(List<Integer>)
opennlp.tools.parser.chunking.CheckContextGenerator.getContext(Parse[],String,int,int)
opennlp.tools.parser.lang.en.HeadRules.readHeadRules(BufferedReader)
opennlp.tools.cmdline.ArgumentParser.validateArgumentsLoudly(String[],Class<T>...)
opennlp.tools.ml.naivebayes.LogProbabilities.addIn(T,double,int)
opennlp.tools.ml.model.EvalParameters.getParams()
opennlp.tools.util.featuregen.CachedFeatureGenerator.createFeatures(List<String>,String[],int,String[])
opennlp.tools.parser.AbstractBottomUpParser.collapsePunctuation(Parse[],Set<String>)
opennlp.tools.parser.treeinsert.BuildContextGenerator.getContext(Parse[],int)
opennlp.tools.parser.chunking.ParserEventStream.addParseEvents(List<Event>,Parse[])
opennlp.tools.util.Span.getType()
opennlp.tools.formats.Conll02NameSampleStream.read()
opennlp.tools.chunker.ChunkerEventStream.createEvents(ChunkSample)
opennlp.tools.ngram.NGramModel.contains(StringList)
opennlp.tools.util.featuregen.AggregatedFeatureGenerator.createFeatures(List<String>,String[],int,String[])
opennlp.tools.chunker.DefaultChunkerContextGenerator.getContext(int,String[],String[],String[])
opennlp.tools.util.StringList.equals(Object)
opennlp.tools.ngram.NGramGenerator.generate(List<String>,int,String)
opennlp.tools.dictionary.serializer.DictionarySerializer.create(InputStream,EntryInserter)
opennlp.tools.dictionary.Dictionary.contains(StringList)
opennlp.tools.ml.model.AbstractModelReader.readUTF()
opennlp.tools.namefind.DictionaryNameFinder.find(String[])
opennlp.tools.parser.Parse.hashCode()
opennlp.tools.ml.AbstractEventTrainer.train(ObjectStream<Event>)
opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(String[],Map<String,Object>)
opennlp.tools.sentdetect.SentenceDetectorFactory.createManifestEntries()
opennlp.tools.namefind.DefaultNameContextGenerator.getContext(int,String[],String[],Object[])
opennlp.tools.util.featuregen.StringPattern.recognize(String)
opennlp.tools.ml.naivebayes.LogProbabilities.get(T)
opennlp.tools.util.Span.getCoveredText(CharSequence)
opennlp.tools.ml.maxent.quasinewton.ParallelNegLogLikelihood.computeInParallel(double[],Class<?extendsComputeTask>)
opennlp.tools.parser.treeinsert.CheckContextGenerator.getContext(Parse,Parse[],int,boolean)
opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(String[],Map<String,Object>)
opennlp.tools.parser.treeinsert.Parser.train(String,ObjectStream<Parse>,HeadRules,TrainingParameters)
opennlp.tools.parser.Parse.updateHeads(HeadRules)
opennlp.tools.parser.AbstractParserEventStream.getInitialChunks(Parse,List<Parse>)
opennlp.tools.ml.model.GenericModelWriter.init(AbstractModel,DataOutputStream)
opennlp.tools.util.model.ModelUtil.writeModel(MaxentModel,OutputStream)
opennlp.tools.util.featuregen.FeatureGeneratorUtil.tokenFeature(String)
opennlp.tools.parser.Parse.pruneParse(Parse)
opennlp.tools.ml.model.UniformPrior.setLabels(String[],String[])
opennlp.tools.ml.model.Context.getParameters()
opennlp.tools.parser.ChunkContextGenerator.chunkandpostag(int,String,String,String)
opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(String)
opennlp.tools.cmdline.ArgumentParser.createUsage(Class<T>)
opennlp.tools.lemmatizer.LemmatizerME.train(String,ObjectStream<LemmaSample>,TrainingParameters,LemmatizerFactory)
opennlp.tools.ngram.NGramModel.toDictionary(boolean)
opennlp.tools.sentdetect.DefaultEndOfSentenceScanner.getPositions(char[])
opennlp.tools.lemmatizer.DefaultLemmatizerContextGenerator.getContext(int,String[],String[],String[])
opennlp.tools.namefind.NameSample.parse(String,String,boolean)
opennlp.tools.util.featuregen.OutcomePriorFeatureGenerator.createFeatures(List<String>,String[],int,String[])
opennlp.tools.ml.maxent.quasinewton.QNModel.eval(String[],float[],double[])
opennlp.tools.parser.Parse.getProb()
opennlp.tools.ml.naivebayes.NaiveBayesTrainer.maxIndex(double[])
opennlp.tools.parser.Parse.getType()
opennlp.tools.parser.chunking.ParserEventStream.init()
spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)
spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory()
spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)
spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)
spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
spark.embeddedserver.jetty.JettyServer.create(int,int,int)
spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)
spark.Service.getPaths()
spark.staticfiles.StaticFilesConfiguration.configure(String)
spark.utils.MimeParse.parseMimeType(String)
spark.staticfiles.StaticFilesConfiguration.configureExternal(String)
spark.Service.addRoute(HttpMethod,RouteImpl)
spark.embeddedserver.EmbeddedServers.initialize()
spark.utils.SparkUtils.convertRouteToList(String)
spark.resource.AbstractFileResolvingResource.getFile()
spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)
spark.utils.GzipUtils.checkAndWrap(HttpServletRequest,HttpServletResponse,boolean)
spark.utils.MimeParse.fitnessAndQualityParsed(String,Collection<ParseResults>)
spark.Service.addFilter(HttpMethod,FilterImpl)
spark.staticfiles.StaticFilesFolder.localConfiguredTo(String)
spark.Service.exception(Class<T>,ExceptionHandler<?superT>)
spark.http.matching.BeforeFilters.execute(RouteContext)
spark.embeddedserver.jetty.EmbeddedJettyServer.join()
spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)
spark.resource.ClassPathResourceHandler.getResource(String)
spark.Routable.get(String,Route)
spark.staticfiles.StaticFilesFolder.externalConfiguredTo(String)
spark.route.Routes.findTargetWithGivenAcceptType(List<RouteEntry>,String)
spark.http.matching.RequestWrapper.changeMatch(RouteMatch)
spark.resource.AbstractResourceHandler.getResource(HttpServletRequest)
spark.TemplateViewRouteImpl.create(String,String,TemplateViewRoute,TemplateEngine)
spark.Spark.stop()
spark.embeddedserver.jetty.websocket.WebSocketHandlerClassWrapper.getHandler()
spark.route.RouteEntry.matchPath(String)
spark.Service.initializeRouteMatcher()
spark.route.ServletRoutes.get()
spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)
spark.route.Routes.add(HttpMethod,String,String,Object)
spark.utils.MimeParse.toFloat(String,float)
spark.route.Routes.find(HttpMethod,String,String)
spark.ExceptionMapper.map(Class<?extendsException>,ExceptionHandlerImpl)
spark.resource.ExternalResource.getDescription()
spark.http.matching.RouteContext.acceptType()
spark.http.matching.Routes.execute(RouteContext)
spark.resource.ExternalResourceHandler.getResource(String)
spark.route.Routes.findTargetsForRequestedRoute(HttpMethod,String)
spark.Request.getParams(List<String>,List<String>)
spark.route.Routes.findMultiple(HttpMethod,String,String)
spark.utils.ClassUtils.registerCommonClasses(Class<?>...)
spark.route.Routes.routeWithGivenAcceptType(String)
spark.utils.StringUtils.delimitedListToStringArray(String,String,String)
spark.route.RouteEntry.matches(HttpMethod,String)
spark.servlet.SparkFilter.getApplications(FilterConfig)
spark.staticfiles.StaticFilesConfiguration.consume(HttpServletRequest,HttpServletResponse)
spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish()
spark.utils.SparkUtils.isParam(String)
org.locationtech.spatial4j.shape.jts.JtsShapeFactory.pointXYZ(double,double,double)
org.locationtech.spatial4j.shape.impl.BBoxCalculator.expandXRange(double,double)
org.locationtech.spatial4j.io.WKTReader.newState(String)
org.locationtech.spatial4j.shape.impl.RectangleImpl.getMinY()
org.locationtech.spatial4j.shape.jts.JtsGeometry.intersectionMatrixToSpatialRelation(IntersectionMatrix)
org.locationtech.spatial4j.shape.impl.BBoxCalculator.expandRange(double,double,double,double)
org.locationtech.spatial4j.shape.impl.RectangleImpl.relate(Shape)
org.locationtech.spatial4j.shape.impl.CircleImpl.relate(Shape)
org.locationtech.spatial4j.shape.impl.RectangleImpl.relateXRange(double,double)
org.locationtech.spatial4j.distance.DistanceUtils.distHaversineRAD(double,double,double,double)
org.locationtech.spatial4j.shape.impl.PointImpl.relate(Shape)
org.locationtech.spatial4j.context.jts.JtsSpatialContextFactory.getGeometryFactory()
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.verifyY(double)
org.locationtech.spatial4j.shape.impl.RectangleImpl.isEmpty()
org.locationtech.spatial4j.shape.impl.GeoCircle.init()
org.locationtech.spatial4j.shape.impl.CircleImpl.relateRectanglePhase2(Rectangle,SpatialRelation)
org.locationtech.spatial4j.shape.impl.RectangleImpl.getCenter()
org.locationtech.spatial4j.shape.jts.JtsGeometry.validate()
org.locationtech.spatial4j.shape.ShapeCollection.relate(Shape)
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.verifyX(double)
org.locationtech.spatial4j.distance.GeodesicSphereDistCalc.distance(Point,double,double)
org.locationtech.spatial4j.shape.impl.PointImpl.reset(double,double)
org.locationtech.spatial4j.shape.jts.JtsShapeFactory.makeShape(Geometry,boolean,boolean)
org.locationtech.spatial4j.shape.SpatialRelation.intersects()
org.locationtech.spatial4j.shape.impl.RectangleImpl.getWidth()
org.locationtech.spatial4j.shape.impl.RectangleImpl.getArea(SpatialContext)
org.locationtech.spatial4j.context.SpatialContextFactory.checkDefaultFormats()
org.locationtech.spatial4j.shape.impl.CircleImpl.relate(Rectangle)
org.locationtech.spatial4j.shape.impl.GeoCircle.numCornersIntersect(Rectangle)
org.locationtech.spatial4j.shape.jts.JtsPoint.getY()
org.locationtech.spatial4j.context.SpatialContext.toString()
org.locationtech.spatial4j.context.jts.JtsSpatialContextFactory.newSpatialContext()
org.locationtech.spatial4j.context.jts.JtsSpatialContextFactory.checkDefaultFormats()
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.lineString(List<Point>,double)
org.locationtech.spatial4j.context.SpatialContextFactory.newSpatialContext()
org.locationtech.spatial4j.context.SpatialContextFactory.makeFormats(SpatialContext)
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.multiShape(List<S>)
org.locationtech.spatial4j.shape.impl.PointImpl.equals(Object)
org.locationtech.spatial4j.shape.jts.JtsShapeFactory.polygon()
org.locationtech.spatial4j.distance.CartesianDistCalc.within(Point,double,double,double)
org.locationtech.spatial4j.shape.impl.PointImpl.isEmpty()
org.locationtech.spatial4j.shape.impl.InfBufLine.cornerByQuadrant(Rectangle,int,Point)
org.locationtech.spatial4j.shape.SpatialRelation.combine(SpatialRelation)
org.locationtech.spatial4j.shape.impl.RectangleImpl.relateYRange(double,double)
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.pointXY(double,double)
org.locationtech.spatial4j.distance.DistanceUtils.normLonDEG(double)
org.locationtech.spatial4j.io.jackson.ShapesAsGeoJSONModule.getModuleName()
org.locationtech.spatial4j.shape.jts.JtsPoint.isEmpty()
org.locationtech.spatial4j.shape.impl.RectangleImpl.getMinX()
org.locationtech.spatial4j.shape.impl.BBoxCalculator.rangeContains(double,double,double)
org.locationtech.spatial4j.shape.impl.RectangleImpl.getBoundingBox()
org.locationtech.spatial4j.shape.jts.JtsShapeFactory.multiShape(Class<T>)
org.locationtech.spatial4j.shape.impl.BufferedLineString.hasArea()
org.locationtech.spatial4j.shape.SpatialRelation.transpose()
org.locationtech.spatial4j.shape.impl.BufferedLine.getBoundingBox()
org.locationtech.spatial4j.io.GeoJSONReader.read(Object)
org.locationtech.spatial4j.io.PolyshapeReader.read(Reader)
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.rect(double,double,double,double)
org.locationtech.spatial4j.distance.DistanceUtils.calcBoxByDistFromPt_deltaLonDEG(double,double,double)
org.locationtech.spatial4j.context.SpatialContextFactory.makeBinaryCodec(SpatialContext)
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.circle(Point,double)
org.locationtech.spatial4j.shape.impl.InfBufLine.contains(Point)
org.locationtech.spatial4j.shape.impl.BufferedLineString.relate(Shape)
org.locationtech.spatial4j.shape.impl.BufferedLine.isEmpty()
org.locationtech.spatial4j.context.SpatialContext.makeRectangle(double,double,double,double)
org.locationtech.spatial4j.io.WKTReader.getFormatName()
org.locationtech.spatial4j.shape.impl.RectangleImpl.relate(Rectangle)
org.locationtech.spatial4j.shape.jts.JtsGeometry.shiftGeomByX(Geometry,int)
org.locationtech.spatial4j.shape.impl.RectangleImpl.getMaxX()
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.lineString()
org.locationtech.spatial4j.shape.jts.JtsGeometry.unwrapDateline(Geometry)
org.locationtech.spatial4j.shape.ShapeCollection.computeBoundingBox(Collection<?extendsShape>,SpatialContext)
org.locationtech.spatial4j.shape.impl.RectangleImpl.reset(double,double,double,double)
org.locationtech.spatial4j.shape.ShapeCollection.size()
org.locationtech.spatial4j.shape.jts.JtsShapeFactory.normX(double)
org.locationtech.spatial4j.io.jackson.ShapeAsGeoJSONSerializer.write(JsonGenerator,Shape)
org.locationtech.spatial4j.shape.impl.InfBufLine.quadrant(Point)